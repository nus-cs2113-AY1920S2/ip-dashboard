[
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siuhian"
        },
        "content": "## What is Duke?"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siuhian"
        },
        "content": "Duke is a personal assistant chatbot that helps a person keep track of various things."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "## Features"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siuhian"
        },
        "content": "### 1 - Adding of tasks"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siuhian"
        },
        "content": "Keep track of various tasks by adding them to the task list in Duke."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siuhian"
        },
        "content": "### 2 - Can support up to 3 different types of tasks"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siuhian"
        },
        "content": "Supports the adding of Todo, Deadline and Event tasks. For Deadline and Event tasks,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siuhian"
        },
        "content": "Duke can help to keep track of the given due date or the event date and time respectively."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siuhian"
        },
        "content": "### 3 - Mark task as done"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siuhian"
        },
        "content": "Allows the user to mark an existing task as done. "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siuhian"
        },
        "content": "### 4 - Display the list of tasks"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siuhian"
        },
        "content": "Display the full task list. Uses symbol [T], [D] and [E] respectively to differentiate between the Todo, Deadline and "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siuhian"
        },
        "content": "Event tasks. Also uses the (X) and (✓) respectively to show if the task is done or not."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siuhian"
        },
        "content": "### 5 - Delete a task"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siuhian"
        },
        "content": "Deletes an existing task in the task list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siuhian"
        },
        "content": "### 6 - Storing/Loading of tasks"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "siuhian"
        },
        "content": "Data on the task list is stored locally on the computer. Thus, information on the existing task list will not be lost "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "siuhian"
        },
        "content": "when Duke terminates. This data will be loaded at the next execution of Duke."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "siuhian"
        },
        "content": "### 7 - Find a task in the list using a keyword"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "siuhian"
        },
        "content": "Ability to find a particular task or a group of tasks in the task list using a keyword."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "siuhian"
        },
        "content": "### `todo` - Adds a Todo task"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "siuhian"
        },
        "content": "Adds a task of the Todo type and its task description to the task list."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "siuhian"
        },
        "content": "Syntax: `todo \u003ctask description\u003e`"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "siuhian"
        },
        "content": "Example of usage: `todo read book`"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome: "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "siuhian"
        },
        "content": "````"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "siuhian"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "siuhian"
        },
        "content": "[T][✘] read book"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "siuhian"
        },
        "content": "Now you have 11 tasks in the list."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "siuhian"
        },
        "content": "````"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "siuhian"
        },
        "content": "### `deadline` - Adds a Deadline task"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "siuhian"
        },
        "content": "Adds a task of the Deadline type with its task description and due date to the task list."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "siuhian"
        },
        "content": "Syntax: `deadline \u003ctask description\u003e /by \u003cdate and time\u003e`"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "siuhian"
        },
        "content": "Example of usage: `deadline return book /by Sunday 2359`"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "siuhian"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "siuhian"
        },
        "content": "````"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "siuhian"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "siuhian"
        },
        "content": "[D][✘] return book (by: Sunday 2359)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "siuhian"
        },
        "content": "Now you have 12 tasks in the list."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "siuhian"
        },
        "content": "````"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "siuhian"
        },
        "content": "### `event` - Adds a Event task"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "siuhian"
        },
        "content": "Adds a task of the Event type with its task description and event date and time to the task list."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "siuhian"
        },
        "content": "Syntax: `event \u003ctask description\u003e /at \u003cdate and time\u003e`"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "siuhian"
        },
        "content": "Example of usage: `event project meeting /at Mon 2-4pm`"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "siuhian"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "siuhian"
        },
        "content": "````"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "siuhian"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "siuhian"
        },
        "content": "[E][✘] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "siuhian"
        },
        "content": "Now you have 13 tasks in the list."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "siuhian"
        },
        "content": "````"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "siuhian"
        },
        "content": "### `done` - Mark a task as done"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "siuhian"
        },
        "content": "Marks an existing task as done, i.e. changes the cross mark (X) to a check mark (✓)."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "siuhian"
        },
        "content": "Syntax: `done \u003ctask number\u003e`"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "siuhian"
        },
        "content": "Example of usage: `done 11`"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "siuhian"
        },
        "content": "*To get the task number of a task, use the function list(will be elaborated below)*"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "siuhian"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "siuhian"
        },
        "content": "````"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "siuhian"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "siuhian"
        },
        "content": "[T][✓] read book"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "siuhian"
        },
        "content": "````"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "siuhian"
        },
        "content": "### `delete` - Delete a task from the task list"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "siuhian"
        },
        "content": "Deletes a task and removes it from the task list. "
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "siuhian"
        },
        "content": "*Immediately propagate the deletion to the local datafile stored on computer*."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "siuhian"
        },
        "content": "Syntax: `delete \u003ctask number\u003e`"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "siuhian"
        },
        "content": "Example of usage: `delete 8`"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "siuhian"
        },
        "content": "*To get the task number of a task, use the function list(will be elaborated below)*"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "siuhian"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "siuhian"
        },
        "content": "````"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "siuhian"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "siuhian"
        },
        "content": "[E][✘] skype meeting (at: 26/2/2020 2-5pm)"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "siuhian"
        },
        "content": "Now you have 9 tasks in the list."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "siuhian"
        },
        "content": "````"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "siuhian"
        },
        "content": "### `list` - Display all the tasks in the task list"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "siuhian"
        },
        "content": "These symbols [T],[D] and [E] are used to differentiate between the todo, deadline and event tasks. "
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "siuhian"
        },
        "content": "Also uses the (X) and (✓) respectively to show if the task is done or not. "
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "siuhian"
        },
        "content": "**The number beside each task is the task number** *(used for done and delete function)*."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "siuhian"
        },
        "content": "Syntax: `list`"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "siuhian"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "siuhian"
        },
        "content": "````"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "siuhian"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "siuhian"
        },
        "content": "1. [D][✘] return book (by: June 6th)"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "siuhian"
        },
        "content": "2. [E][✓] project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "siuhian"
        },
        "content": "3. [T][✓] buy drinks"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "siuhian"
        },
        "content": "4. [D][✘] 2113 iP (by: monday)"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "siuhian"
        },
        "content": "5. [E][✘] watch movie (at: friday 4pm)"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "siuhian"
        },
        "content": "````"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "siuhian"
        },
        "content": "### `find` - Find a task in the task list"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "siuhian"
        },
        "content": "Using a specified keyword, find all the tasks in the task lists that have this"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "siuhian"
        },
        "content": "keyword in their task description."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "siuhian"
        },
        "content": "Syntax: `find \u003ckeyword\u003e`"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "siuhian"
        },
        "content": "Example of usage: `find book`"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "siuhian"
        },
        "content": "````"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "siuhian"
        },
        "content": "Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "siuhian"
        },
        "content": "1. [D][✘] return book (by: June 6th)"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "siuhian"
        },
        "content": "2. [T][✓] read book"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "siuhian"
        },
        "content": "````"
      }
    ],
    "authorContributionMap": {
      "siuhian": 132,
      "-": 20
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siuhian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siuhian"
        },
        "content": " * Represents the deadline objects that are tracked"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siuhian"
        },
        "content": " * by Duke. A deadline object corresponds to tasks with a due date."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siuhian"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siuhian"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    protected String dueDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * Constructor for the deadline object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * @param description information about the deadline"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * @param dueDate the date and time where the deadline is due"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    public Deadline(String description, String dueDate) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        this.dueDate \u003d dueDate;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * Method used to format the deadline description before printing."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * @return a string that describes the deadline object"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    public String showFullDescription() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        return description + \" (by: \" + dueDate + \")\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * Getter for due date of deadline object."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * @return a string that represents the due date"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    public String getDueDate() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        return dueDate;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * Getter for the icon of the deadline object."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * @return a string that acts as a icon to differentiate"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * between the various types of tasks"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    public String getTypeIcon() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        return \"[D]\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "siuhian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siuhian": 44
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siuhian"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siuhian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siuhian"
        },
        "content": " * Implements a chat bot named Duke that helps the user keep track"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siuhian"
        },
        "content": " * of various things with its different functions."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siuhian"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    static String currDir \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    private final static String filePath \u003d currDir + \"/data.txt\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    private static Ui ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * Represents a constructor for the Duke Object. The constructor"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * helps to initialise other object classes that is useful to the"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * execution of the program."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * @param filepath relative filepath to store the data.txt file"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    public Duke(String filepath) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        storage \u003d new Storage(filepath);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            tasks \u003d new TaskList(storage.loadFile());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * Waits for user input to determine the command to execute."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * Terminates the program only when the command \u0027bye\u0027 is received."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        ui.showWelcomeMessage();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            String line \u003d parser.getInput();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            String command;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "siuhian"
        },
        "content": "                command \u003d parser.getCommand(line);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            } catch (InvalidCommandException c) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "siuhian"
        },
        "content": "                parser.handleInvalidCommand();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "siuhian"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "siuhian"
        },
        "content": "                ui.exitFromApp();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "siuhian"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "siuhian"
        },
        "content": "                tasks.listAllTasks();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "siuhian"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "siuhian"
        },
        "content": "                tasks.markTaskAsDone(line);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "siuhian"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "siuhian"
        },
        "content": "                    storage.saveToFile(tasks);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "siuhian"
        },
        "content": "                } catch (IOException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "siuhian"
        },
        "content": "                    ui.showLoadingError();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "siuhian"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "siuhian"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "siuhian"
        },
        "content": "                tasks.deleteTask(line);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "siuhian"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "siuhian"
        },
        "content": "                    storage.saveToFile(tasks);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "siuhian"
        },
        "content": "                } catch (IOException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "siuhian"
        },
        "content": "                    ui.showLoadingError();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "siuhian"
        },
        "content": "                }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "siuhian"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "siuhian"
        },
        "content": "                tasks.findTask(line);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "siuhian"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "siuhian"
        },
        "content": "                String taskInformation;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "siuhian"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "siuhian"
        },
        "content": "                    taskInformation \u003d parser.getTaskInformation(line);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "siuhian"
        },
        "content": "                } catch (IndexOutOfBoundsException b) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "siuhian"
        },
        "content": "                    parser.handleIndexOutOfBounds(command);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "siuhian"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "siuhian"
        },
        "content": "                }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "siuhian"
        },
        "content": "                tasks.storeTaskIntoList(taskInformation, command);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "siuhian"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "siuhian"
        },
        "content": "                    storage.saveToFile(tasks);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "siuhian"
        },
        "content": "                } catch (IOException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "siuhian"
        },
        "content": "                    ui.showLoadingError();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "siuhian"
        },
        "content": "                }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "siuhian"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * Point of entry for the Duke program."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * @param args unused"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        new Duke(filePath).run();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siuhian": 98,
      "-": 4
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siuhian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siuhian"
        },
        "content": " * Represents the event objects that are tracked"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siuhian"
        },
        "content": " * by Duke. A event object corresponds to a occasion that is"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siuhian"
        },
        "content": " * planned to happen at a specific date and time."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siuhian"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siuhian"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    protected String timePeriod;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * Constructor for the event object."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * @param description information about the event"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * @param timePeriod the date and the time period"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * where the event will take place"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    public Event(String description, String timePeriod) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        this.timePeriod \u003d timePeriod;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * Method used to format the event description before printing."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * @return a string that describes the event object"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    public String showFullDescription() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        return description + \" (at: \" + timePeriod + \")\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * Getter for time period of event object."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * @return a string that represents the date and the time period"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * of the event"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    public String getTimePeriod() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        return timePeriod;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * Getter for the icon of the event object."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * @return a string that acts as a icon to differentiate"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * between the various types of tasks"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    public String getTypeIcon() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        return \"[E]\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "siuhian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siuhian": 47
    }
  },
  {
    "path": "src/main/java/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siuhian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siuhian"
        },
        "content": " * Represents an exception object that"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siuhian"
        },
        "content": " * deals with invalid user input."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siuhian"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siuhian"
        },
        "content": "public class InvalidCommandException extends Exception {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siuhian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siuhian": 7
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siuhian"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siuhian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siuhian"
        },
        "content": " * Represents a parser object with various methods that"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siuhian"
        },
        "content": " * helps Duke to parse user input for the different commands."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siuhian"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siuhian"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    private Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    public static final String[] VALID_COMMANDS \u003d"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            {\"done\", \"list\", \"bye\", \"todo\", \"deadline\", \"event\", \"delete\", \"find\"};"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * Method used to scan user input."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * @return a string that corresponds to user input"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    public String getInput() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        line \u003d in.nextLine();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        return line;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * Method used to extract the relevant command from user input."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * @param line a string that corresponds to user input"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * @return a string that represents the command called by user"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * @throws InvalidCommandException if the command called by user is invalid or not defined."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    public  String getCommand(String line) throws InvalidCommandException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        int dividerPosition \u003d line.indexOf(\" \");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        String command;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        if (dividerPosition !\u003d -1) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            command \u003d line.substring(0, dividerPosition);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            command \u003d line;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        boolean isExists \u003d false;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        for (String temp: VALID_COMMANDS) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            if (temp.equals(command)) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "siuhian"
        },
        "content": "                isExists \u003d true;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "siuhian"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        if (isExists) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            return command;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            throw new InvalidCommandException();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * Method used to extract the task description from user input."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * @param line a string that corresponds to user input"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * @return a string that represents the task description"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * @throws IndexOutOfBoundsException if task description could not be found"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    public String getTaskInformation(String line) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        int dividerPosition \u003d line.indexOf(\" \");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        if (dividerPosition \u003d\u003d -1) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            return line.substring(dividerPosition + 1);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * Method used to handle invalid commands."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * Prints an error message to notify user of the invalid input."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    public void handleInvalidCommand() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        ui.printLine();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        System.out.println(\" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        ui.printLine();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * Method used to handle tasks with no task description."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * Prints an error message to notify user of the error."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * @param command a string that represents the command called by user"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    public void handleIndexOutOfBounds(String command) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        ui.printLine();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        System.out.println(\" ☹ OOPS!!! The description of a \" + command + \" cannot be empty.\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        ui.printLine();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * Method used to parse datafile and populate the tasklists database."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * @param line represents a line read from the datafile"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * @return a Task object that is interpreted from the line."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    public Task readTaskFromFile(String line) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        String[] splitLine \u003d line.split(\", \");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        String typeIcon \u003d splitLine[0];"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        String isDoneString \u003d splitLine[1];"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        String description \u003d splitLine[2];"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        if (typeIcon.equals(\"[E]\")) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            String timePeriod \u003d splitLine[3];"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            task \u003d new Event(description, timePeriod);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        } else if (typeIcon.equals(\"[D]\")) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            String dueDate \u003d splitLine[3];"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            task \u003d new Deadline(description, dueDate);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            task \u003d new Todo(description);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        boolean isDone \u003d Boolean.parseBoolean(isDoneString);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        task.setIsDone(isDone);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "siuhian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siuhian": 115
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siuhian"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siuhian"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siuhian"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siuhian"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siuhian"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siuhian"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siuhian"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siuhian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siuhian"
        },
        "content": " * Represents a storage object with various methods that"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siuhian"
        },
        "content": " * helps Duke to write and read from the datafile."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siuhian"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siuhian"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * Constructor for the storage object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * Initialise the file path used for writing and reading."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * @param filepath a string that represents the file path"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    public Storage(String filepath) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        this.filePath \u003d filepath;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * Method used to load the file at the specified filepath."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * Calls the parser object to parse the file and get the task objects."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * Creates a new file is the file could not be found at the filepath."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * @return an array list of task objects that will be used to populate the tasklist"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * @throws IOException if the file could not be loaded/read"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    public ArrayList\u003cTask\u003e loadFile() throws IOException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        ArrayList\u003cTask\u003e listOfTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        File dataFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        if (!dataFile.exists()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            dataFile.createNewFile();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            BufferedReader reader \u003d new BufferedReader(new FileReader(dataFile));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            String line \u003d reader.readLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            while (line !\u003d null) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "siuhian"
        },
        "content": "                Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "siuhian"
        },
        "content": "                Task task \u003d parser.readTaskFromFile(line);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "siuhian"
        },
        "content": "                listOfTasks.add(task);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "siuhian"
        },
        "content": "                line \u003d reader.readLine();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        return listOfTasks;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * Method used to write to the file at the specified filepath."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * @param tasks a tasklist object that keeps track of the tasks in memory during runtime"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * @throws IOException if the file could not be written"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    public void saveToFile(TaskList tasks) throws IOException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        File dataFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        if (!dataFile.exists()) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            dataFile.createNewFile();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        BufferedWriter writer \u003d new BufferedWriter(new FileWriter(dataFile));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        // format task before writing it to file"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        for (Task currTask : tasks.listOfTasks) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            String formattedTask \u003d String.format(\"%s, %s, %s\", currTask.getTypeIcon(), currTask.getIsDone(),"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "siuhian"
        },
        "content": "                    currTask.getDescription());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            if (currTask instanceof Event) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "siuhian"
        },
        "content": "                formattedTask +\u003d \", \";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "siuhian"
        },
        "content": "                formattedTask +\u003d ((Event) currTask).getTimePeriod();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            if (currTask instanceof Deadline) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "siuhian"
        },
        "content": "                formattedTask +\u003d \", \";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "siuhian"
        },
        "content": "                formattedTask +\u003d ((Deadline) currTask).getDueDate();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            writer.write(formattedTask + \"\\n\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "siuhian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siuhian": 79
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siuhian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siuhian"
        },
        "content": " * Represents the task objects that are tracked"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siuhian"
        },
        "content": " * by Duke. A task object is the parent class for the deadline,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siuhian"
        },
        "content": " * event and todo objects."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siuhian"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siuhian"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * Constructor for the task object. The constructor"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * initialises the isDone to be false to show that"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * the task is not yet completed."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * @param description information about the task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * Getter for the status of the task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * @return a string that symbolises a tick when the task is completed"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * and a cross when otherwise."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * Method used to get the description of the task for printing."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * This method is overridden by child classes"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * which requires additional formatting/information."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * @return a string that describes the task object"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    public String showFullDescription() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * Getter for the description of the Task."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * @return a string that describes the task object"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * Getter for the icon of the task object. As the task object"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * is a parent class, there is no icon for the task object."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * This method is overridden by child classes."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * @return a string that acts as a icon to differentiate"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * between the various types of tasks"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    public String getTypeIcon() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * Getter for the status of the task."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * @return true if the task is done and false otherwise"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * Setter to set the status of the task."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * @param isDone boolean description on the status of the task"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    public void setIsDone(boolean isDone) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * Method to mark task as done. This method sets"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * isDone to be true."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * Override the default method to provide a more meaningful string"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * representation on the description of the task."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * @return a formatted string that describes the tasks in more details"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        String status \u003d String.format(\"[%s]\", this.getStatusIcon());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        return this.getTypeIcon() + status + \" \" + this.showFullDescription();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "siuhian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siuhian": 93
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siuhian"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siuhian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siuhian"
        },
        "content": " * Represents a tasklist object with various methods that"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siuhian"
        },
        "content": " * helps Duke to keep track of the tasks details."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siuhian"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siuhian"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    private Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    public ArrayList\u003cTask\u003e listOfTasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * Constructor for the tasklist object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * @param listOfTasks an array list of tasks that will be used"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     *                    to populate the listOfTasks"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e listOfTasks) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        this.listOfTasks \u003d listOfTasks;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * Constructor for the tasklist object."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * Used to initialise an empty listOfTasks"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        this.listOfTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * Method used to store tasks into the listOfTasks."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * Formats the task information into two components"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * (description and dateAndTime) before storing."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * @param taskInformation full information about the task"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * @param separator       used to format the taskInformation into its components"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * @param command         differentiate between deadline and event tasks"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    public void storeTaskIntoList(String taskInformation, String separator, String command) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        int dividerPosition \u003d taskInformation.indexOf(separator);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        String description \u003d taskInformation.substring(0, dividerPosition);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        String dateAndTime \u003d taskInformation.substring(dividerPosition + 5);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        if (command.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            Deadline deadlineToAdd \u003d new Deadline(description, dateAndTime);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            listOfTasks.add(deadlineToAdd);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        } else if (command.equals(\"event\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            Event eventToAdd \u003d new Event(description, dateAndTime);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            listOfTasks.add(eventToAdd);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * Method used to store tasks into the listOfTasks"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * @param taskInformation full information about the task"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * @param command         differentiate between the different type of tasks."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    public void storeTaskIntoList(String taskInformation, String command) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            Todo todoToAdd \u003d new Todo(taskInformation);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            listOfTasks.add(todoToAdd);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            storeTaskIntoList(taskInformation, \" /by \", command);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            storeTaskIntoList(taskInformation, \" /at \", command);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        showStoredTask();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * Method used to print an acknowledgement message when"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * the user adds a task."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    private void showStoredTask() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        int sizeOfList \u003d listOfTasks.size();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        Task lastTask \u003d listOfTasks.get(sizeOfList - 1);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        ui.printLine();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        System.out.println(\" Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        System.out.println(\"   \" + lastTask);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        System.out.println(\" Now you have \" + sizeOfList + \" tasks in the list.\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        ui.printLine();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * Method used to print all the tasks in the listOfTasks."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    public void listAllTasks() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        ui.printLine();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        System.out.println(\" Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        for (int i \u003d 0; i \u003c listOfTasks.size(); i +\u003d 1) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            Task currTask \u003d listOfTasks.get(i);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            System.out.println(\" \" + (i + 1) + \". \" + currTask);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        ui.printLine();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * Method used to print an acknowledgement message when"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * the user completes a task."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * @param line a string that represents the task that is completed"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    public void markTaskAsDone(String line) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        int dividerPosition \u003d line.indexOf(\"done\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        int taskNumber \u003d Integer.parseInt(line.substring(dividerPosition + 5));"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        Task taskDone \u003d listOfTasks.get(taskNumber - 1);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        taskDone.markAsDone();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        ui.printLine();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        System.out.println(\" Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        System.out.println(\"   \" + taskDone);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        ui.printLine();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * Method used to delete a particular task from the listOfTasks."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * @param line a string that represents the task to be deleted"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    public void deleteTask(String line) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        String[] splitLine \u003d line.split(\" \");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        int taskNumber \u003d Integer.parseInt(splitLine[1]);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        Task taskToDelete \u003d listOfTasks.get(taskNumber - 1);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        listOfTasks.remove(taskNumber - 1);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        int numOfTasksLeft \u003d listOfTasks.size();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        ui.printLine();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        System.out.println(\" Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        System.out.println(\"   \" + taskToDelete);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        System.out.println(\" Now you have \" + numOfTasksLeft + \" tasks in the list.\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        ui.printLine();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    public void findTask(String line) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        String[] splitLine \u003d line.split(\" \");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        String keyword \u003d splitLine[1];"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        for (int i \u003d 0; i \u003c listOfTasks.size(); i +\u003d 1) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            String taskDescription \u003d listOfTasks.get(i).toString();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            if (taskDescription.contains(keyword)) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "siuhian"
        },
        "content": "                matchingTasks.add(listOfTasks.get(i));"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        ui.printLine();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        System.out.println(\" Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        for (int i \u003d 0; i \u003c matchingTasks.size(); i +\u003d 1) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            Task currTask \u003d matchingTasks.get(i);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            System.out.println(\" \" + (i + 1) + \". \" + currTask);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        ui.printLine();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "siuhian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siuhian": 160
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siuhian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siuhian"
        },
        "content": " * Represents the things to do objects that are tracked"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siuhian"
        },
        "content": " * by Duke. This object corresponds to an activity that"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siuhian"
        },
        "content": " * needs to be done that does not have a specific due date."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siuhian"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siuhian"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * Constructor for the todo object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * @param description information about the activity to be done"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * Getter for the icon of the todo object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * @return a string that acts as a icon to differentiate"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * between the various types of tasks"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    public String getTypeIcon() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        return \"[T]\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siuhian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siuhian": 25
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "siuhian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "siuhian"
        },
        "content": " * Represents a user interface object with various methods"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "siuhian"
        },
        "content": " * that helps Duke interact with the end user."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "siuhian"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "siuhian"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    private static final String logo \u003d \"  ____        _        \\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            + \" |  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            + \" | | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            + \" | |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            + \" |____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * Method used to print the greeting message when the user"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * launch the application."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    public void showWelcomeMessage() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        System.out.println(\" Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        System.out.println(\" What can I do for you?\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * Method used to print a horizontal line so it is easier"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * to differentiate between the user input and program response."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    public void printLine() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        for (int i \u003d 0; i \u003c 60; i +\u003d 1) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "siuhian"
        },
        "content": "            System.out.print(\"_\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * Method used to terminate the program and print the exit message."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    public void exitFromApp() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        System.out.println(\" Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "siuhian"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     * Method used to print an IO exception message."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "siuhian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "siuhian"
        },
        "content": "        System.out.println(\"IO Exception occurred\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "siuhian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "siuhian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "siuhian": 52
    }
  }
]

[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    mainClassName \u003d \"duke.Duke\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "test {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thanhduc2000": 21,
      "-": 20
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "T|0|haha|"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "T|0|hihi|"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "D|0|do homework|Monday"
      }
    ],
    "authorContributionMap": {
      "thanhduc2000": 3
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public Deadline(String description, String time) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        return \"D\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + time + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thanhduc2000": 25
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final int TASK_LIMIT \u003d 100;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final String LINE_SPLITTING \u003d \"\\t____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final String BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final String BYE_MESSAGE \u003d \"\\tBye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final String HELLO_MESSAGE \u003d \"\\tHello! I\u0027m Duke\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final String HELP_MESSAGE \u003d \"\\tIt seems like you are needing some help.\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final String DONE \u003d \"done\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final String LIST \u003d \"list\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final String TASK_MARKING_MESSAGE \u003d \"\\tNice! I\u0027ve marked this task as done:\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final String TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final String DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final String EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final String TASK_LISTING \u003d \"\\tHere are the tasks in your list:\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final String ADDED_TASK_MESSAGE \u003d \"\\tGot it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final int TODO_WORD_LENGTH \u003d 4;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final int DEADLINE_WORD_LENGTH \u003d 8;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final int EVENT_WORD_LENGTH \u003d 5;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final String SPACE \u003d \" \";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final String EMPTY_STRING \u003d \"\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final String EMPTY_INPUT_MESSAGE \u003d \"\\t☹ OOPS!!! Input cannot be empty\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final String DUMMY_INPUT_MESSAGE \u003d \"\\t☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final String LIMIT_REACHED_MESSAGE \u003d \"\\t☹ OOPS!!! duke.Task limit has reached\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final String WRONG_NUMBER_FORMAT_MESSAGE \u003d \"\\t☹ OOPS!!! Wrong number format!\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final String OUT_OF_BOUND_MESSAGE \u003d \"\\t☹ OOPS!!! The task\u0027s index is out of bound or does not exist\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final String TASK_REMOVED_MESSAGE \u003d \"\\tNoted. I\u0027ve removed this task:\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final String DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final String VERTICAL_BAR \u003d \"|\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final String TODO_ABBREVIATION \u003d \"T\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final String DEADLINE_ABBREVIATION \u003d \"D\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final String EVENT_ABBREVIATION \u003d \"E\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final String PATH \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final String ONE \u003d \"1\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static void printList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        System.out.println(TASK_LISTING);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            System.out.println(\"\\t\" + (i + 1) + \".\" + tasks.get(i));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static void main(String[] args) throws IOException, NullPointerException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        welcomeMessage();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        loadFileData(tasks);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        Scanner commandScanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        String command \u003d commandScanner.nextLine();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        while (!command.equals(BYE)) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            String[] commandSplitter \u003d command.split(SPACE);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            System.out.print(LINE_SPLITTING);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            if (command.equals(LIST)) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                printList(tasks);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                String prefix \u003d commandSplitter[0];"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                switch (prefix) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                case DELETE:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                    deleteTaskMessage(tasks, commandSplitter[1]);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                case DONE:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                    markTaskMessage(tasks, commandSplitter[1]);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                case EMPTY_STRING:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                case TODO:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                case DEADLINE:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                case EVENT:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                    addTask(tasks, command, prefix);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            System.out.println(LINE_SPLITTING);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            command \u003d commandScanner.nextLine();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        writeFileData(tasks);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        byeMessage();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    private static void writeFileData(ArrayList\u003cTask\u003e tasks) throws IOException {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        FileWriter fw \u003d new FileWriter(PATH);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        for (Task t: tasks) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            fw.write(t.getType() + VERTICAL_BAR + t.getIsDone() + VERTICAL_BAR + t.getDescription()"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                    + VERTICAL_BAR + t.getTime() + System.lineSeparator());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    private static void deleteTaskMessage(ArrayList\u003cTask\u003e tasks, String number) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            System.out.println(TASK_REMOVED_MESSAGE);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            int index \u003d Integer.parseInt(number);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            System.out.println(\"\\t\" + tasks.get(index - 1));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            tasks.remove(tasks.get(index - 1));"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            String printTaskCount \u003d \"\\tNow you have \" + tasks.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            System.out.println(printTaskCount);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            System.out.println(OUT_OF_BOUND_MESSAGE);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            System.out.println(WRONG_NUMBER_FORMAT_MESSAGE);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    private static void addTask(ArrayList\u003cTask\u003e tasks, String command, String prefix) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            int splitIndex \u003d command.indexOf(\"/\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            switch (prefix) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            case EMPTY_STRING:"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                throw new NullPointerException();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            case TODO:"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                String activity \u003d command.substring(TODO_WORD_LENGTH + 1);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                tasks.add(new ToDo(activity));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                String activity2 \u003d command.substring(DEADLINE_WORD_LENGTH + 1, splitIndex - 1);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                String date \u003d command.substring(splitIndex + 4);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                tasks.add(new Deadline(activity2, date));"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                String activity3 \u003d command.substring(EVENT_WORD_LENGTH + 1, splitIndex - 1);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                String time \u003d command.substring(splitIndex + 4);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                tasks.add(new Event(activity3, time));"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                throw new IOException();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            if (tasks.size() \u003e TASK_LIMIT) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                throw new ArrayIndexOutOfBoundsException();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            System.out.println(ADDED_TASK_MESSAGE);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            String printTask \u003d \"\\t\" + tasks.get(tasks.size() - 1);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            System.out.println(printTask);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            String printTaskCount \u003d \"\\tNow you have \" + tasks.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            System.out.println(printTaskCount);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            System.out.println(EMPTY_INPUT_MESSAGE);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            String invalidFormatMessage \u003d \"\\t☹ OOPS!!! The description of a \" + prefix + \" cannot be empty or\""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                    + \" it is in the wrong format.\";"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            System.out.println(invalidFormatMessage);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            System.out.println(DUMMY_INPUT_MESSAGE);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            System.out.println(LIMIT_REACHED_MESSAGE);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    private static void markTaskMessage(ArrayList\u003cTask\u003e tasks, String word) throws ArrayIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            int index \u003d Integer.parseInt(word);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            if (index \u003e\u003d tasks.size()) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                throw new ArrayIndexOutOfBoundsException();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            tasks.get(index - 1).markAsDone();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            System.out.println(TASK_MARKING_MESSAGE);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            String printTask \u003d \"\\t%s\\n\";"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            System.out.printf(printTask, tasks.get(index - 1));"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            System.out.println(WRONG_NUMBER_FORMAT_MESSAGE);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            System.out.println(OUT_OF_BOUND_MESSAGE);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    private static void byeMessage() {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        System.out.print(LINE_SPLITTING);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        System.out.println(BYE_MESSAGE);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        System.out.println(LINE_SPLITTING);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    private static void welcomeMessage() {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        String greeting \u003d LINE_SPLITTING + HELLO_MESSAGE + HELP_MESSAGE + LINE_SPLITTING;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        System.out.println(greeting);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    private static void loadFileData(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            File f \u003d new File(PATH); // create a File for the given file path"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                String[] dataSplitter \u003d s.nextLine().split(\"\\\\|\");"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                switch (dataSplitter[0]) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                case TODO_ABBREVIATION:"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                    tasks.add(new ToDo(dataSplitter[2]));"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                case DEADLINE_ABBREVIATION:"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                    tasks.add(new Deadline(dataSplitter[2], dataSplitter[3]));"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                case EVENT_ABBREVIATION:"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                    tasks.add(new Event(dataSplitter[2], dataSplitter[3]));"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                if (dataSplitter[1].equals(ONE)) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                    tasks.get(tasks.size() - 1).markAsDone();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            System.out.println(\"File does not exist yet\");"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thanhduc2000": 205,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public Event(String description, String time) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        return \"E\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + time + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thanhduc2000": 25
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            return \"✓\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            return \"✗\"; //return tick or X symbols"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public int getIsDone() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            return 1;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        return (\"[\" + getStatusIcon() + \"] \" + description);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thanhduc2000": 49
    }
  },
  {
    "path": "src/main/java/duke/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        return \"T\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thanhduc2000": 17
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        System.out.println(\"Hello\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thanhduc2000": 5
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\tHello! I\u0027m Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\tIt seems like you are needing some help."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\tGot it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\t[T][✗] borrow book"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\tNow you have 1 tasks in the list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\tGot it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\t[D][✗] return book (by: Sunday)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\tNow you have 2 tasks in the list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\tGot it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\t[E][✗] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\tNow you have 3 tasks in the list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\tGot it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\t[✗] go and kill myself after uni!"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\tNow you have 4 tasks in the list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\tNice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\t[T][✓] borrow book"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\tNice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\t[E][✓] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\tHere are the tasks in your list:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\t1[T][✓] borrow book"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\t2[D][✗] return book (by: Sunday)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\t3[E][✓] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\t4[✗] go and kill myself after uni!"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\tBye. Hope to see you again soon!"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "thanhduc2000": 51
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "go and kill myself after uni!"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "thanhduc2000": 8
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "thanhduc2000": 21
    }
  }
]

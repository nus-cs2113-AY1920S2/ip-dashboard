[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    mainClassName \u003d \"duke.Duke\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    archiveVersion \u003d \"0.2.2\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "test {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thanhduc2000": 21,
      "-": 20
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "T|1|haha|1998-01-16"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "T|1|read book|1998-01-16"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "E|0|do book stuffs|2000-11-17"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "T|0|read books|1998-01-16"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "D|1|CS2113\u0027s iP|2020-03-02"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "E|0|April\u0027s Fool|2020-04-01"
      }
    ],
    "authorContributionMap": {
      "thanhduc2000": 6
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "# Duke\u0027s User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "# Table of content"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\u003c!-- TOC --\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "1. [Introduction](#1-introduction)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "1. [Pre-requisites](#2-pre-requisites)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "1. [Features](#3-features)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    1. [Add task](#i-add-task)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    1. [List task](#ii-list-task)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    1. [Mark task as done](#iii-mark-task-as-done)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    1. [Delete task](#iv-delete-task)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    1. [Find task](#v-find-task)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    1. [Exit Program](#vi-exit-program)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "1. [Usage](#4-usage)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    - [`todo [description]`](#todo-description)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    - [`deadline [description] /by [yyyy-mm-dd]`](#deadline-description-by-yyyy-mm-dd)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    - [`event [description] /at [yyyy-mm-dd]`](#event-description-at-yyyy-mm-dd)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    - [`list`](#list)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    - [`done [index_of_task]`](#done-index_of_task)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    - [`delete [index_of_task]`](#delete-index_of_task)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    - [`find [key_words]`](#find-key_words)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    - [`bye`](#bye)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\u003c!-- /TOC --\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "## 1. Introduction"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\tHello! I\u0027m Duke"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\tIt seems like you are needing some help."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\t"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "Duke is a chatbot that actually resemble what is so-called ToDoList applications that we usually use nowadays."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "However, this application has not yet had a GUI (Graphics User Interface) like the one we usually see but it is"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "functioning with CLI (Command Line Interface). Since there is no GUI, it will be a bit tough for some customer"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "to get used to this application. Therefore, we will be having a brief explanation of how to get started to this "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "chatbot"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "To run the chatbot, type this command to the terminal/command prompt"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    java -jar duke-0.2.jar"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "Remember to set path for Java beforehand or you can simply set a permanent path for java by typing"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    set path\u003d{some_path_in_your_folder}\\Java\\jdk-11.0.1\\bin"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "At first there will be a warning that there is a data file `data/duke.txt` that has not existed and it will create a "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "new directory and save them after terminating the program"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "## 2. Pre-requisites"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "JDK 11 and above, you could set up the framework online at "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "https://www.oracle.com/java/technologies/javase-jdk11-downloads.html"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "## 3. Features "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "### i. Add Task "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "Add a task in 1 of these 3 types (Todo , Deadline, Event)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "### ii. List Task"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "List all the tasks available from the data"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "### iii. Mark Task As Done"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "When you finish a task, you could mark them as done so as not to refer to it next time"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "### iv. Delete Task"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "Delete a task that is not necessary anymore"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "### v. Find Task"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "Find tasks with containing certain key words from the task\u0027s descriptions"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "### vi. Exit Program"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "The program will be terminated and your data will be saved"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "## 4. Usage"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "### `todo [description]`"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "The command contains 2 parts:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "1. \"todo\" word"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "1. [description]: the description of your task"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "It will then print out a message confirmed that your todo\u0027s task is added successfully."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "`todo read books`"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": " \tGot it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": " \t[T][✗] read books"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": " \tNow you have 5 tasks in the list."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": " \t____________________________________________________________"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": " \t"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "### `deadline [description] /by [yyyy-mm-dd]`"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "The command contains:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "1. \"deadline\" word"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "1. [description]: the description of your task"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "1. /by: the word used to realize date"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "1. [yyyy-mm-dd]: date of the year in this form"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "It will then print out a message confirmed that your deadline\u0027s task is added successfully and number of"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "tasks left."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "`deadline CS2113\u0027s iP /by 2020-03-02`"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    [D][✗] CS2113\u0027s iP (by: Mar 2 2020)"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    Now you have 6 tasks in the list."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    "
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "### `event [description] /at [yyyy-mm-dd]`"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "The command contains:"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "1. \"event\" word"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "1. [description]: the description of your task"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "1. /by: the word used to realize date"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "1. [yyyy-mm-dd]: date of the year in this form"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "It will then print out a message confirmed that your event\u0027s task is added successfully and number of tasks left."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "`event April\u0027s Fool /at 2020-04-01`"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    [E][✗] April\u0027s Fool (at: Apr 1 2020)"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    Now you have 7 tasks in the list."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    "
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "### `list`"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "It will list out all the tasks from index 1 along with task\u0027s description and time if available"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    Here are the tasks in your list:"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    1.[T][✓] haha"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    2.[T][✗] read book"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    3.[E][✗] do book stuffs (at: Nov 17 2000)"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    4.[D][✗] read book (by: Nov 17 2010)"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    5.[T][✗] read books"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    6.[D][✗] CS2113\u0027s iP (by: Mar 2 2020)"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    7.[E][✗] April\u0027s Fool (at: Apr 1 2020)"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    "
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "### `done [index_of_task]`"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "The command contains:"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "1. \"done\" word"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "1. [index_of_task]: index of the task to be mark as done"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "It will print a message that confirmed that this task has been mark as done."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "`done 6`"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\tNice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\t[D][✓] CS2113\u0027s iP (by: Mar 2 2020)"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "### `delete [index_of_task]`"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "The command contains:"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "1. \"delete\" word"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "1. [index_of_task]: index of the task to be removed"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "It will print out the task that you want to delete and show the number of tasks left."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "`done 6`"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\tNoted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\t[D][✗] read book (by: Nov 17 2010)"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\tNow you have 6 tasks in the list."
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "### `find [key_words]`"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "The command contains:"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "1. \"find\" word"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "1. [key_words]: words contained in the task\u0027s description"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "It will print out all tasks that contain the matching key words."
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "`find book`"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\tHere are the matching tasks in your list:"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\t1: [T][✗] read book"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\t2: [E][✗] do book stuffs (at: Nov 17 2000)"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\t3: [T][✗] read books"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "### `bye`"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "This command will make the program to terminate and your data will be saved"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "It will print out a bye message."
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\tBye. Hope to see you again soon!"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\t____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "thanhduc2000": 213,
      "-": 16
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": " * Duke class - the main class for Duke project"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * Constructor of the main class Duke"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @see Duke"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        storage \u003d new Storage();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * Method to run a Duke program"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                Command c \u003d parser.parse(fullCommand);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                ui.showNextLine();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * Main function of the Duke program"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @param args main\u0027s arguments"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thanhduc2000": 67,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": " * AddCommand class - A class to process the execution of adding a task to the list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    private String fullCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    private String prefix;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * Constructor for an AddCommand given its command and prefix"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @param fullCommand user\u0027s input"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @param prefix the prefix that tells what to execute"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public AddCommand(String fullCommand, String prefix) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        this.prefix \u003d prefix;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    /** Override abstract method of Command Class."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * execute an AddCommand in TaskList class"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @param tasks the user\u0027s TaskList."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @param ui the user interface to inform them"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @param storage the storage to save any changes."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        tasks.addTask(storage,fullCommand,prefix);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thanhduc2000": 36
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": " * Abstract Command class, a superclass to provide some template methods"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": " * for the subclasses to override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * Method to set the termination of the program to false in default"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @return false which is not terminating"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    /** An abstract method to execute a command, given a task and a storage to save any changes."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @param storage the storage to save any changes."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @param ui the user interface to inform them"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @param tasks the user\u0027s TaskList."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @throws IOException in case something wrong with input"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws IOException;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thanhduc2000": 32
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": " * DeleteCommand class extended from Command class to deal with the"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": " * execution of deleting tasks"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "public class DeleteCommand extends Command{"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * Constructor of given command given the task\u0027s index (started from 1)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @param index index of the task being deleted (started from 1)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public DeleteCommand(String index) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        this.index \u003d Integer.parseInt(index);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    /** Override abstract method of Command Class."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * execute a DeleteCommand in TaskList class"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @param tasks the user\u0027s TaskList."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @param ui the user interface to inform them"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @param storage the storage to save any changes."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        tasks.delete(index,storage);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thanhduc2000": 35
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": " * ExitCommand extended from the Command class to deal with the"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": " * termination of the program"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * Override method isExit in the Command class"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * Method to set exit to true in order to terminate the program"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @return true termination of the program"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    /** Override abstract method of Command Class."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * execute an ExitCommand in TaskList class"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @param tasks the user\u0027s TaskList."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @param ui the user interface to inform them"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @param storage the storage to save any changes."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        ui.showBye();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thanhduc2000": 33
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": " * FindCommand extended from the Command class to deal with the execution of the find"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": " * function to find tasks with certain key words"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    private String keyWord;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * FindCommand constructor with certain key word"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @param keyWord word that is to be found in task\u0027s description"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public FindCommand(String keyWord) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        this.keyWord \u003d keyWord;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    /** Override abstract method of Command Class."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * execute a FindCommand in TaskList class"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @param tasks the user\u0027s TaskList."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @param ui the user interface to inform them"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @param storage the storage to save any changes."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        tasks.findTask(keyWord);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thanhduc2000": 35
    }
  },
  {
    "path": "src/main/java/duke/command/MarkTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": " * MarkTaskCommand class extended from Command class to deal with marking"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": " * tasks that are done by user"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "public class MarkTaskCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    /** Constructor for a DoneCommand with given index (started from 1)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @param index the index of the task that the user wants to mark done"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     *              (started from 1)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public MarkTaskCommand(String index) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        this.index \u003d Integer.parseInt(index);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    /** Override abstract method of Command Class."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * execute a MarkTaskCommand in TaskList class"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @param tasks the user\u0027s TaskList."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @param ui the user interface to inform them"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @param storage the storage to save any changes."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        tasks.markAsDone(index, storage);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thanhduc2000": 36
    }
  },
  {
    "path": "src/main/java/duke/command/ShowCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": " * ShowCommand class extended from Command class to deal with printing the list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": " * of tasks that is saved by user"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "public class ShowCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    /** Override abstract method of Command Class."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * execute a ShowCommand in TaskList class"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @param tasks the user\u0027s TaskList."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @param ui the user interface to inform them"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @param storage the storage to save any changes."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        tasks.printList();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thanhduc2000": 23
    }
  },
  {
    "path": "src/main/java/duke/constant/Constant.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "package duke.constant;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "public final class Constant {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final int TASK_LIMIT \u003d 100;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final String TAB_SPACE \u003d \"\\t\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final String DIVIDER \u003d TAB_SPACE + \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final String BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final String BYE_MESSAGE \u003d TAB_SPACE + \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final String HELLO_MESSAGE \u003d TAB_SPACE + \"Hello! I\u0027m Duke\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final String HELP_MESSAGE \u003d TAB_SPACE + \"It seems like you are needing some help.\\n\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final String DONE \u003d \"done\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final String LIST \u003d \"list\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final String TASK_MARKING_MESSAGE \u003d TAB_SPACE + \"Nice! I\u0027ve marked this task as done:\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final String TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final String DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final String EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final String TASK_LISTING \u003d TAB_SPACE + \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final String ADDED_TASK_MESSAGE \u003d TAB_SPACE + \"Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final int TODO_WORD_LENGTH \u003d 4;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final int DEADLINE_WORD_LENGTH \u003d 8;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final int EVENT_WORD_LENGTH \u003d 5;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final String SPACE \u003d \" \";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final String EMPTY_STRING \u003d \"\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final String EMPTY_INPUT_MESSAGE \u003d TAB_SPACE + \"☹ OOPS!!! Input cannot be empty\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final String DUMMY_INPUT_MESSAGE \u003d TAB_SPACE + \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what \""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                                                    + \"that means :-(\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final String LIMIT_REACHED_MESSAGE \u003d TAB_SPACE + \"☹ OOPS!!! duke.task.Task limit has reached\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final String WRONG_NUMBER_FORMAT_MESSAGE \u003d TAB_SPACE + \"☹ OOPS!!! Wrong number format!\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final String OUT_OF_BOUND_MESSAGE \u003d TAB_SPACE + \"☹ OOPS!!! The task\u0027s index \""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                                                    + \"is out of bound or does not exist\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final String TASK_REMOVED_MESSAGE \u003d TAB_SPACE + \"Noted. I\u0027ve removed this task:\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final String DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final String VERTICAL_BAR \u003d \"|\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final String TODO_ABBREVIATION \u003d \"T\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final String DEADLINE_ABBREVIATION \u003d \"D\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final String EVENT_ABBREVIATION \u003d \"E\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final String PATH \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final String ONE \u003d \"1\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final String FIND \u003d \"find\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final String VERTICAL_BAR_REGREX \u003d \"\\\\|\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final String DEADLINE_TYPE \u003d \"[D]\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final String TODO_TYPE \u003d \"[T]\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final String EVENT_TYPE \u003d \"[E]\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final String DATE_FORMAT_MESSAGE \u003d TAB_SPACE + \"☹ OOPS!!! Please input the correct date format\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                                                    + \"in form of yyyy-mm-dd\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final String THE_MATCHING_TASKS_IN_YOUR_LIST \u003d \"\\tHere are the matching tasks in your list:\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final String DIRECTORY_PATH \u003d \"data\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final String SLASH_SEPARATOR \u003d \"/\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final String ERROR_MESSAGE \u003d \"☹ OOPS!!! I\u0027m sorry, but there is an error :-(\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static final String DIRECTORY_DOES_NOT_EXIST \u003d \"\\tThe directory does not exist,\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                                                        + \"currently creating a new one\\n\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    private Constant() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thanhduc2000": 56
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "import static duke.constant.Constant.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": " * Parser class - A class to handle the input of users and pass it to"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": " * Command class for implementing"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    protected TaskList tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * Empty Parser constructor to initialize an empty task list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        this.tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * a method to deal with user\u0027s input by extracting it and pass it"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * for the Command to process each indivdual\u0027s task"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @param fullCommand user\u0027s input"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @return Command each user\u0027s input could provide different types"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * of tasks to process"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public Command parse(String fullCommand) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        //make the command to lower case without leading spaces"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        String commandReformatted \u003d fullCommand.toLowerCase().trim();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        if (commandReformatted.equals(BYE)) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        } else if (commandReformatted.equals(LIST)) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            return new ShowCommand();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            // split the string into array of words"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            String[] commandSplitter \u003d fullCommand.trim().split(SPACE);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            // get the prefix, which is the first word in the command and"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            // pass them for Command sub-classes to process"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            String prefix \u003d commandSplitter[0].toLowerCase().trim();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            switch (prefix) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            case DELETE:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                return new DeleteCommand(commandSplitter[1]);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            case DONE:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                return new MarkTaskCommand(commandSplitter[1]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            case FIND:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                return new FindCommand(commandSplitter[1]);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            case TODO:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                return new AddCommand(fullCommand,prefix);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thanhduc2000": 62
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "import static duke.constant.Constant.*;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": " * Storage class - Class to deal with loading and saving manipulation"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": " * in the lists and save it back to a data file, also created a new file"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": " * if the path does not exist"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * Method to load data from the data file by processing the data and add"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * them to the task list"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @return tasks the newly created task list"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @throws FileNotFoundException if there is no file to load"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws FileNotFoundException{"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        File f \u003d new File(PATH); // create a File for the given file path"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            String[] dataSplitter \u003d s.nextLine().split(VERTICAL_BAR_REGREX);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            switch (dataSplitter[0]) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            case TODO_ABBREVIATION:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                tasks.add(new ToDo(dataSplitter[2]));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            case DEADLINE_ABBREVIATION:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                tasks.add(new Deadline(dataSplitter[2], dataSplitter[3]));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            case EVENT_ABBREVIATION:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                tasks.add(new Event(dataSplitter[2], dataSplitter[3]));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            if (dataSplitter[1].equals(ONE)) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                tasks.get(tasks.size() - 1).markAsDone();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * Method to save the changes in the task lists after adjustment from"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * users and create new file if it does not exist yet"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @param tasks the list of tasks that is passed after adjustment"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @throws IOException in case exception in file"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public void save(TaskList tasks) throws IOException{"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        Path directoryPath \u003d Paths.get(PATH);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        boolean isFileExists \u003d Files.exists(directoryPath);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        if(!isFileExists) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            File directory \u003d new File(DIRECTORY_PATH);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            directory.mkdir();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        File file \u003d new File(PATH);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        FileWriter fw \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        for (Task task: tasks.getTaskList()) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            fw.write(task.getType() + VERTICAL_BAR + task.getIsDone() + VERTICAL_BAR + task.getDescription()"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                    + VERTICAL_BAR + task.getTime() + System.lineSeparator());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thanhduc2000": 78
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "import static duke.constant.Constant.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": " * Deadline class extend from Task class to deal with Deadline"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    protected LocalDate time;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * Deadline constructor with given description and date"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @param description description of the task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @param time date that task needs to be done by"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public Deadline(String description, String time) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            this.time \u003d LocalDate.parse(time);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            System.out.println(DATE_FORMAT_MESSAGE);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * Override of getTime method in Task"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @return time of the deadline"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public LocalDate getTime() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * Override of the time\u0027s format method"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @return time format in human readable way"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public String getTimeFormatted() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        return this.time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * Override of getType method"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @return first letter of deadline \"D\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        return \"D\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * Override of string method in Task"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @return format of a Deadline\u0027s task"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        return DEADLINE_TYPE + super.toString() + \" (by: \" + this.getTimeFormatted() + \")\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thanhduc2000": 68
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "import static duke.constant.Constant.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": " * Event class extend from Task class to deal with Event"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    protected LocalDate time;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * Event constructor with given description and date"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @param description description of the task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @param time date that event happens"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public Event(String description, String time) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            this.time \u003d LocalDate.parse(time);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            System.out.println(DATE_FORMAT_MESSAGE);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * Override of getType method"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @return first letter of event \"E\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        return \"E\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * Override of getTime method in Task"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @return time of the event"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public LocalDate getTime() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * Override of the time\u0027s format method"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @return time format in human readable way"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public String getTimeFormatted() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        return this.time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * Override of string method in Task"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @return format of a Event\u0027s task"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        return EVENT_TYPE + super.toString() + \" (at: \" + this.getTimeFormatted() + \")\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thanhduc2000": 68
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": " * Task class to store the information of the task that user inputted,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": " * also a superclass for types of Task"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * Task constructor given description provided by user, all tasks are"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * automatically set to undone"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @param description information of the task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * Method to get the symbol of tick and cross which stand for done and undone"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @return tick when the task is done or cross when task is undone"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            return \"✓\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            return \"✗\"; //return tick or X symbols"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * Method to get the first letter of the task\u0027s type used later in"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * subclasses"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @return empty string because this class do not have any types"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * Method to get the description of a task"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @return description description\u0027s string"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * Method to check if the task is done or not, used for decoding in the"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * data file"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @return 1 if done, 0 if undone"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public int getIsDone() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            return 1;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * Method to get the time format of the task"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @return date that could store in the data file"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public LocalDate getTime() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        return LocalDate.parse(\"1998-01-16\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * Method to get the format of the time which is easily read by human"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @return string of the date"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public String getTimeFormatted() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * Method to mark a task as done"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * Overriding of the default string\u0027s method"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @return format of the task described"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        return (\"[\" + getStatusIcon() + \"] \" + description);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thanhduc2000": 104
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "import static duke.constant.Constant.*;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": " * TaskList - class to store different types of tasks such as Todo, Deadline, Event"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * Constructor of TaskList to initialize an empty array list"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * Constructor of TaskList to pass an existed tasks array list"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * to the TaskList class"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @param tasks an array list of tasks"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * Method to get the list of all tasks contained in the TaskList"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @return tasks List of tasks"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * Method to print list of tasks contained in the TaskList with index"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * started from 1"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public void printList() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        System.out.println(TASK_LISTING);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            String taskListingMessage \u003d TAB_SPACE + (i + 1) + \".\" + tasks.get(i);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            System.out.println(taskListingMessage);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * Method to delete a certain task in the list with certain index(started from 1)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * and save it back to the data file"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @param index index of the task that needs to be deleted (started from 1)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @param storage pass the storage object to use method to save file after"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     *                deleting"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @throws IOException if something wrong with input"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public void delete(int index, Storage storage) throws IOException{"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            System.out.println(TASK_REMOVED_MESSAGE);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            Task taskGetting \u003d tasks.get(index - 1);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            System.out.println(\"\\t\" + taskGetting);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            tasks.remove(taskGetting);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            storage.save(this);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            String printTaskCount \u003d \"\\tNow you have \" + tasks.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            System.out.println(printTaskCount);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            System.out.println(OUT_OF_BOUND_MESSAGE);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            System.out.println(WRONG_NUMBER_FORMAT_MESSAGE);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * Method to mark a task in the list as done with certain index (started from"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * 1) and save it back to the data file"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @param index index of the task that needs to be deleted (started from 1)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @param storage pass the storage object to use method to save file after"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     *      *                marking"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @throws IOException if something wrong with input"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public void markAsDone(int index, Storage storage) throws IOException{"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            if (index \u003e\u003d tasks.size()) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                throw new ArrayIndexOutOfBoundsException();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            Task taskGetting \u003d tasks.get(index - 1);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            taskGetting.markAsDone();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            storage.save(this);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            System.out.println(TASK_MARKING_MESSAGE);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            String printTask \u003d \"\\t%s\\n\";"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            System.out.printf(printTask, taskGetting);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            System.out.println(WRONG_NUMBER_FORMAT_MESSAGE);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            System.out.println(OUT_OF_BOUND_MESSAGE);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * Method to add a certain task with description (and maybe date and time)"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * depending on certain prefixes in the command and store it back to the data file"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * after adding"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @param storage pass the storage object to use method to save file after"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     *      *      *                adding"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @param command pass the whole command into the function"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @param prefix first word in the command describing which type of task to be added"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @throws DateTimeParseException when the date and time is in the wrong format"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public void addTask(Storage storage, String command, String prefix) throws DateTimeParseException {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            int splitIndex \u003d command.indexOf(SLASH_SEPARATOR);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            //adding different types of Task based on their prefixes"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            switch (prefix) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            case EMPTY_STRING:"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                throw new NullPointerException();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            case TODO:"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                String activity \u003d command.substring(TODO_WORD_LENGTH + 1);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                tasks.add(new ToDo(activity));"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                String activity2 \u003d command.substring(DEADLINE_WORD_LENGTH + 1, splitIndex - 1);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                String date \u003d command.substring(splitIndex + 4);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                tasks.add(new Deadline(activity2, date));"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                String activity3 \u003d command.substring(EVENT_WORD_LENGTH + 1, splitIndex - 1);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                String time \u003d command.substring(splitIndex + 4);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                tasks.add(new Event(activity3, time));"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                throw new IOException();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            storage.save(this);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            if (tasks.size() \u003e TASK_LIMIT) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                throw new ArrayIndexOutOfBoundsException();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            //printing the messages to users"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            System.out.println(ADDED_TASK_MESSAGE);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            String printTask \u003d \"\\t\" + tasks.get(tasks.size() - 1);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            System.out.println(printTask);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            String printTaskCount \u003d \"\\tNow you have \" + tasks.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            System.out.println(printTaskCount);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            System.out.println(EMPTY_INPUT_MESSAGE);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            String invalidFormatMessage \u003d \"\\t☹ OOPS!!! The description of a \" + prefix + \" cannot be empty or\""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                    + \" it is in the wrong format.\";"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            System.out.println(invalidFormatMessage);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            System.out.println(DUMMY_INPUT_MESSAGE);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            System.out.println(LIMIT_REACHED_MESSAGE);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * Method to find certain tasks with certain key words in the task list and"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * list them with indexes started from 1"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @param keyWord words that is typed in to find the tasks with the key words"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public void findTask(String keyWord) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        keyWord \u003d keyWord.trim().toLowerCase();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        ArrayList\u003cTask\u003e matchedTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        for (Task t : tasks) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            String taskToLowerCase \u003d t.getDescription().trim().toLowerCase();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            boolean isMatched \u003d taskToLowerCase.contains(keyWord);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            if (isMatched) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                matchedTasks.add(t);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        System.out.println(THE_MATCHING_TASKS_IN_YOUR_LIST);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        for (int i \u003d 0; i \u003c matchedTasks.size(); i++) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            String taskListingMessage \u003d TAB_SPACE + (i + 1) + \": \" + matchedTasks.get(i);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "            System.out.println(taskListingMessage);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thanhduc2000": 191
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "import static duke.constant.Constant.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": " * Todo class extend from Task class to deal with Todo"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * Todo constructor given a description from user"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @param description description of the task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * Overriding of getType in Task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * return first letter of Task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @return \"T\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        return \"T\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * Override of string method in Task"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @return format of the task in output"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        return TODO_TYPE + super.toString();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thanhduc2000": 38
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "import static duke.constant.Constant.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": " * Ui class to interact with users by giving some informed sentences"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * Empty Ui constructor"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * Method to print the welcome message for user"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        String greeting \u003d DIVIDER + HELLO_MESSAGE + HELP_MESSAGE + DIVIDER;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        System.out.println(greeting);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * Method to print divider for user"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        System.out.print(DIVIDER);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * Method to print an empty next line"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public void showNextLine() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        System.out.println(\"\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * Method to read command from the user and pass it back to Parser for dealing"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * with it"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @return command command string that included user\u0027s input"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        Scanner commandScanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        String command \u003d commandScanner.nextLine();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * Method to print the error that the file has not been created"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        System.out.println(DIVIDER + DIRECTORY_DOES_NOT_EXIST"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        + DIVIDER);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * Method to print the bye message to user"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public void showBye() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        System.out.println(BYE_MESSAGE);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * Method to print errors encountered by user when he/she inputted something"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * in a wrong way"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @param errorMessage error message delivered by the exception"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     * @return error message string"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public String showError(String errorMessage) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        return DIVIDER"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                + ERROR_MESSAGE"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                + (errorMessage)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "                + DIVIDER;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thanhduc2000": 81
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "        System.out.println(\"Hello\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "thanhduc2000": 5
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\tHello! I\u0027m Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\tIt seems like you are needing some help."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\tGot it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\t[T][✗] borrow book"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\tNow you have 1 tasks in the list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\tGot it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\t[D][✗] return book (by: Sunday)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\tNow you have 2 tasks in the list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\tGot it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\t[E][✗] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\tNow you have 3 tasks in the list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\tGot it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\t[✗] go and kill myself after uni!"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\tNow you have 4 tasks in the list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\tNice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\t[T][✓] borrow book"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\tNice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\t[E][✓] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\tHere are the tasks in your list:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\t1[T][✓] borrow book"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\t2[D][✗] return book (by: Sunday)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\t3[E][✓] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\t4[✗] go and kill myself after uni!"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\tBye. Hope to see you again soon!"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "thanhduc2000": 51
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "go and kill myself after uni!"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "thanhduc2000": 8
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "thanhduc2000"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "thanhduc2000": 21
    }
  }
]

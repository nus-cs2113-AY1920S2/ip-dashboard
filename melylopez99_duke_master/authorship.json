[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "[T][✘] buy book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "[E][✘] book (at: 8pm)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "[E][✘] eat (at: 9pm)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "[E][✘] eat (at: my house)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "[E][✘] eat (at: lunch)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "[T][✓] hehe"
      }
    ],
    "authorContributionMap": {
      "melylopez99": 6
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "## Introduction "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "Duke is for those who prefer to use a desktop application for organizing, managing, and editing tasks. More importantly, this application is optimized for those who prefer to work with Command-Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you are interested, jump to Section 2, Quickstart to begin using the program! "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "## Quick Start "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "1. Ensure you have Java 11 or above installed in your computer. "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "2. Download the newest version of Duke. "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "3. Copy the file to the folder you want to use as your home folder for Duke. "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "4. From the command prompt, or terminal type : `java -jar duke.jar`"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "### Todo"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "Adds todo to the list of tasks. "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "Format: `todo (description)`"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "Expected of usage: `todo clean house`"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "### Deadline "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "Adds deadline to the list of tasks. "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "Format: `deadline (description) by/ (time/date)`"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "Expected of usage: `deadline return book by/ Monday at 5pm`"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "### Event "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "Adds event to the list of tasks. "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "Format: `event (description) at/ (location)`"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "Expected of usage: `event party /at College of Alice and Peter Tan`"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "### Delete"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "Deletes a task from the list of tasks. "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "Format: `delete (number of task in tasklist)`"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "Expected of usage: `delete 3`"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "### Find"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "Finds tasks by searching for a certain keyword. "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "Format: `find (description)`"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "Expected of usage: `find book`"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "### Done"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "Marks a task as done. "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "Format: `done (number of task in tasklist)`"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "Expected of usage: `done 2`"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "### List "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "Lists all the tasks in the list. "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "Format: `list`"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "Expected of usage: `list`"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "### Bye "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "Exists the program "
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "Format: `bye`"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "Expected of usage: `bye`"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "melylopez99": 59,
      "-": 13
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import duke.Exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "melylopez99"
        },
        "content": " * Represents an command-line organization program that keeps track of tasks that either the user inputs"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "melylopez99"
        },
        "content": " * or have been loaded from a previous text file. The user is able to keep track of tasks, add, delete, search,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "melylopez99"
        },
        "content": " * and mark some as completed by typing the appropriate command into the command line."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "melylopez99"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    private static TaskList taskLists;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    private static Storage storage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    private static Ui ui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    private static Parser parser;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        taskLists \u003d new TaskList();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        ui \u003d new Ui(taskLists);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        storage \u003d new Storage(taskLists);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        parser \u003d new Parser(taskLists);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            taskLists \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        } catch (DukeException e ) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            taskLists \u003d new TaskList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        ui.greeting();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            String response \u003d parser.getUserResponse();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            parser.doUserCommand(response);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public static void main(String[] args) throws DukeException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "melylopez99": 46,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/Exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "package duke.Exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "melylopez99"
        },
        "content": " * Represents an exception for the Duke program that is an extension"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "melylopez99"
        },
        "content": " * of the Exception class for Java."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "melylopez99"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * Constructor for DukeException class"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public DukeException(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "melylopez99": 16
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import duke.Exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "melylopez99"
        },
        "content": " * Represents a Scanner object that is created from the user\u0027s input/response with"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "melylopez99"
        },
        "content": " * the program. This class handles the user response and tells the program what commands to execute."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "melylopez99"
        },
        "content": " * A parser object corresponds to user\u0027s response e.g, \u0027todo return book\u0027"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "melylopez99"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public static Scanner userInput;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public static Ui ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public static TaskList taskList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * Constructor for the Parser class"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * @param taskList a pointer/reference to the tasklist"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public Parser(TaskList taskList){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        userInput \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        this.ui \u003d new Ui(taskList);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * Returns a trimmed String representation of the response from the user"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * @return trimmed String user response."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public String getUserResponse(){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        String userResponse \u003d userInput.nextLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        return userResponse.trim();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * Function that parses through the user response and tells the program which"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * command it should execute."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * @param userResponse trimmed String of user response"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public void doUserCommand(String userResponse){"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        String action \u003d userResponse.split(\" \")[0];"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        String restOfUserInput \u003d userResponse.replace(action, \"\").trim();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        ui.printLineSeparator();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            if(action.equals(\"bye\")){"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                ui.goodbye();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            } else if(action.equals(\"list\")){"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                taskList.listTasks();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            } else if(action.equals(\"done\")){"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                    taskList.done(restOfUserInput);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                    ui.invalidCommand(\"done\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            } else if(action.equals(\"todo\")){"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                    taskList.todo(restOfUserInput);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                    ui.invalidCommand(\"todo\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            } else if(action.equals(\"deadline\")){"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                    taskList.deadline(restOfUserInput);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                    ui.invalidCommand(\"deadline\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            } else if(action.equals(\"event\")){"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                    taskList.event(restOfUserInput);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                    ui.invalidCommand(\"event\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            } else if(action.equals(\"delete\")){"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                    taskList.delete(restOfUserInput);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                    ui.invalidCommand(\"delete\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            } else if(action.equals(\"find\")){"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                    taskList.find(restOfUserInput);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                    ui.invalidCommand(\"find\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            ui.invalidCommand();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        ui.printLineSeparator();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "}"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "melylopez99": 99
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import duke.Exception.DukeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "melylopez99"
        },
        "content": " * Represents the location of text file where tasks are saved/loaded to."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "melylopez99"
        },
        "content": " * This class ensures that tasks are initially loaded and tasks are saved after any change. "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "melylopez99"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public static  String filePath;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public static String fileDir;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public static File file;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    private static TaskList taskList;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * The constructor for the Storage class"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * @param taskList pointer to taskList for save/load functions"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public Storage(TaskList taskList){"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        this.filePath \u003d \"./data/duke.txt\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        this.fileDir \u003d \"./data\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * Helper function that turns all the tasks in taskList into String format"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * @return string representation of all tasks"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public static String tasksToString(){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        StringBuilder taskString \u003d new StringBuilder();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        for(int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            StringBuilder append \u003d taskString.append(taskList.tasks.get(i)).append(\"\\n\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        return taskString.toString();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * Function that saves all tasks onto text file"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public void save(){"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        File file \u003d new File(fileDir);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        // create a directory if not made"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        if(!file.exists()){"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            System.out.println(\"The \u0027data\u0027 directory has not been created. Creating one now!\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            file.mkdir();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            String filepath \u003d \"./data/duke.txt\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filepath);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            String textToAdd \u003d tasksToString();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            fw.write(textToAdd);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        } catch (IOException e){"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            System.out.println(\"There was an error trying to save file. Check if file exists!\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * Returns an ArrayList of tasks that is taken from the text file"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * @return an ArrayList type Task"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * @throws DukeException if unable to load contents from textfile"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        ArrayList\u003cTask\u003e loadedTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            while(s.hasNext()){"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                String task \u003d s.nextLine();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                String taskType \u003d task.substring(1,2);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                String markAsDone \u003d task.substring(4,5);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                String description \u003d task.substring(7,task.length());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                if(taskType.equals(\"T\")){"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                    Task todo \u003d new Todo(description);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                    if(!markAsDone.equals(\"\\u2718\")) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                        todo.markAsDone();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                    loadedTasks.add(todo);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                } else if (taskType.equals(\"E\")){"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                   String newDes \u003d description.replace(\"(\", \"\").replace(\")\", \"\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                   String des \u003d newDes.split(\" at: \")[0];"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                   String at \u003d newDes.split(\" at: \")[1];"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                   Task event \u003d new Event(des, at);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                    if(!markAsDone.equals(\"\\u2718\")) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                        event.markAsDone();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                    loadedTasks.add(event);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                } else if (taskType.equals(\"D\")){"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                    String newDes \u003d description.replace(\"(\", \"\").replace(\")\", \"\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                    String des \u003d newDes.split(\" by: \")[0];"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                    String by \u003d newDes.split(\" by: \")[1];"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                    Task deadline \u003d new Event(des, by);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                    if(!markAsDone.equals(\"\\u2718\")) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                        deadline.markAsDone();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                    loadedTasks.add(deadline);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            System.out.println(\"There was an error loading tasks from file!\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        return loadedTasks;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "}"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "melylopez99": 126
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "melylopez99"
        },
        "content": " * Represents a type deadline, an extension of the Task class. A deadline object is a type"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "melylopez99"
        },
        "content": " * of Task that has to be completed by a certain time for the user, and can be specificed"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "melylopez99"
        },
        "content": " * using /by, e.g. \u0027return book /by March 3rd\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "melylopez99"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "melylopez99": 20
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "melylopez99"
        },
        "content": " * Represents an type event, an extension of the Task class. An event object is a type"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "melylopez99"
        },
        "content": " * of Task that is an event specified by /at for location/time, e.g \u0027party /at 8pm tonight\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "melylopez99"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public Event(String description, String at){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "melylopez99": 20
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "melylopez99"
        },
        "content": " * Represents a task or piece of work that the user inputs, and can be of type: todo,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "melylopez99"
        },
        "content": " * event, or deadline. Tasks contain their type, mark of whether it has been completed, and"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "melylopez99"
        },
        "content": " * description of what needs to be done."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "melylopez99"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        return (\"[\" + (isDone ? \"\\u2713\" : \"\\u2718\") + \"] \"); //return tick or X symbols"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public void markAsDone() { "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    \tthis.isDone \u003d true; "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        return (this.getStatusIcon() + description);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "melylopez99": 27
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import duke.Exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "melylopez99"
        },
        "content": " * Represents the list of all Tasks and the commands the user execute on them. This class"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "melylopez99"
        },
        "content": " * represents all the operations the user can have on the list, e.g \u0027list\u0027 shows all the"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "melylopez99"
        },
        "content": " * tasks in the list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "melylopez99"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public static ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    protected Storage storage \u003d new Storage(this);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    protected Ui ui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * Constructor for the TaskList class that declares new taskList, Ui, and"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * Storage objects."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public TaskList(){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        this.ui \u003d new Ui(this);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    // Constructor that takes in loaded task message"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * Second Constructor for the TaskList class that takes in"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * an ArrayList of tasks from the loaded text file instead of"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * creating a new empty list."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * @param taskList"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        this.tasks \u003d taskList;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        this.ui \u003d new Ui(this);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * Returns an integer representation of the size/length of the taskList"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public Integer size(){"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * Function that adds any type of task to the list."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * It also saves the updated taskList to a text file"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * @param t Task t to be added to taskList"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public void addTask(Task t){"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        tasks.add(t);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        storage.save();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        ui.printTask(t);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * Function that creates a new todo task and"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * adds to the taskList"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * @param command decription for todo"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * @throws DukeException is the user does not give description"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public void todo(String command) throws DukeException{"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        if(command.isEmpty()){"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            Task t \u003d new Todo(command);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            addTask(t);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * Function that creates a new deadline task and"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * adds it to the taskList"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * @param command description for the task"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * @throws DukeException if no description is given."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public void deadline(String command) throws DukeException{"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        if(command.isEmpty()){"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            String task \u003d command.split(\" /by \")[0];"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            String by \u003d command.split(\" /by \")[1];"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            Task d \u003d new Deadline(task, by);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            addTask(d);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * Function that creates a new event task and"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * adds it to the taskList"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * @param command description for the task"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * @throws DukeException if no description is given."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public void event(String command) throws DukeException{"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        if(command.isEmpty()){"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            String task \u003d command.split(\" /at \")[0];"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            String at \u003d command.split(\" /at \")[1];"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            Task e \u003d new Event(task, at);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            addTask(e);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * Function that deletes a designated task from the taskList"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * @param command user response of which command to delete"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * @throws DukeException no response is given by user"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public void delete(String command) throws DukeException {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        if (command.isEmpty()) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            int taskNum \u003d Integer.parseInt(command) - 1;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            if(taskNum \u003c 0 || taskNum \u003e tasks.size()){"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                Task toDelete \u003d tasks.get(taskNum);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                tasks.remove(toDelete);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                ui.printDeleted(toDelete);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                storage.save();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * Function that lists all the tasks is taskList"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public void listTasks() {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        if(!tasks.isEmpty()){"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            ui.printList(tasks);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            ui.printEmptyList();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * Function that marks a designated task as done in the taskList"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * @param command the response from the user that is used to choose which task is marked as done"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * @throws DukeException if no response is given"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public void done(String command) throws DukeException{"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        if(command.isEmpty()){"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            int taskNum \u003d Integer.parseInt(command) - 1;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            if(taskNum \u003c 0 || taskNum \u003e tasks.size()){"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                Task markDone \u003d tasks.get(taskNum);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                markDone.markAsDone();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                ui.printMarkedDone(markDone);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                storage.save();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * Function that finds a certain keyword within the taskList and prints out"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * the list where the keyword is found"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * @param command"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public void find(String command) throws DukeException {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        if (command.isEmpty()) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            String search \u003d command.trim().toLowerCase();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            for (Task t : tasks) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                String taskDescription \u003d t.description.trim().toLowerCase();"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                if (taskDescription.contains(search)) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                    foundTasks.add(t);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            if (!foundTasks.isEmpty()){"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                ui.printList(foundTasks);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                ui.printEmptyList();"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "melylopez99": 195
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "melylopez99"
        },
        "content": " * Represents the type \u0027todo\u0027, and extension of the Task class. A todo object corresponds"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "melylopez99"
        },
        "content": " * to a particular task that the user still has to complete, e.g \u0027eat lunch\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "melylopez99"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    //constructor for the Todo class"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "melylopez99": 18
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "melylopez99"
        },
        "content": " * Represents the interactions the program has with the user e.g, greetings, goodbyes, and"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "melylopez99"
        },
        "content": " * current status of list etc. This class displays messages and other interactions to the user"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "melylopez99"
        },
        "content": " * as it uses the program, e.g, \"Error! Invalid command\" "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "melylopez99"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    protected String lineSeparator \u003d \"--------------------------------------------\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    protected String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * Constructor for the Ui class"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * @param taskList reference/pointer to the taskList"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public Ui(TaskList taskList) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * Represents a line that separates the user\u0027s response from the program\u0027s output"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * Used for GUI purposes."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public void printLineSeparator(){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        System.out.println(lineSeparator);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * A function that prints out the initial greeting and logo for Duke"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public void greeting(){"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo + \"\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        printLineSeparator();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * A function that prints out the goodbye message when the user wants"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * to exit the program."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public void goodbye() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        printLineSeparator();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * Function that prints out error message if unable to load tasks."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public void showLoadingError(){"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        System.out.println(\"Error loading from task list. Creating new task list.\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * Function that prints out the current task and that has been added into"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * the taskList and the new size of the taskList."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * @param t the task that will be printed and added to taskList."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public void printTask(Task t){"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        System.out.println(t);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list. \");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * Function that prints out the task that was deleted from the taskList"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * @param t"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public void printDeleted(Task t) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        System.out.println(t);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public void printMarkedDone(Task t) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        System.out.println(t);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * Function that prints all the tasks of a taskList"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * @param tasks - array of the tasks to be printed"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public void printList(ArrayList\u003cTask\u003e tasks){"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        int taskCounter \u003d 1;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        for(Task t: tasks) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            System.out.println((taskCounter) + \".\" + t);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            taskCounter++;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * Function that prints out message in case of empty list"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public void printEmptyList(){"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        System.out.println(\"The list is empty!\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * Function that prints out that the command the user typed is not valid"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public void invalidCommand(){"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        System.out.println(\"Invalid command. Please try again! \");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * Function that prints out the command the user type is invalid"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * becauase the description was missing"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     * @param commandType type of command that is invalid"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public void invalidCommand(String commandType) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        System.out.println(\"Invalid \" + commandType + \" command. Make sure there is a correct description!\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "melylopez99": 130
    }
  }
]

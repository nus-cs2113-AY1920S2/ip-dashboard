[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "[T][✘] clean house"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "[T][✘] prepare food"
      }
    ],
    "authorContributionMap": {
      "melylopez99": 2
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "melylopez99": 13
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public static String lineSeparator \u003d \"--------------------------------------------\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public static Scanner userInput \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public static void main(String[] args) throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        // Function that prints out the initial greeting for duke"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        printGreeting();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        // Loop that keeps running the program until user exits"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            // Getting the user input every time from the user"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            String userResponse \u003d getUserResponse();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            String[] userResponseList \u003d userResponse.split(\" \");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            String action \u003d userResponseList[0];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            String restOfUserInput \u003d userResponse.replace(action, \"\").trim();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                if (action.equals(\"bye\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                } else if (action.equals(\"list\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                    doListCommand();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                } else if (action.equals(\"done\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                    doDoneCommand(restOfUserInput);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                } else if (action.equals(\"todo\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                        doTodoCommand(restOfUserInput);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                        System.out.println(\"Error. Todo command must have input!\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                        printLineSeparator();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                } else if (action.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                    doDeadlineCommand(restOfUserInput);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                } else if (action.equals(\"event\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                    doEventCommand(restOfUserInput);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                } else if (action.equals(\"delete\")){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                    doDeleteCommand(restOfUserInput);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                    throw new DukeException();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                printLineSeparator();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                System.out.println(\"Invalid command. Please try again! \");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "                printLineSeparator();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        printExitMessage();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    // Helper function for printing line separator"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public static void printLineSeparator(){"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        System.out.println(lineSeparator);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    // Function for initial greeting of Duke"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public static void printGreeting(){"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo + \"\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        printLineSeparator();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    // Helper function that gets the response from the user"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public static String getUserResponse() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        String userResponse \u003d userInput.nextLine();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        return userResponse.trim();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    // Function that prints out action when user exits program"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public static void printExitMessage() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        printLineSeparator();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    // Helper function to print out message when task gets added to list"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public static void printTask() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        System.out.println(tasks.get(tasks.size()-1));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list. \");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    // Helper function that executes command for \u0027list\u0027"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public static void doListCommand() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        printLineSeparator();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        // OPTIMIZE THIS FOR LOOP"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        for(int i \u003d 0; i \u003c tasks.size(); i++){"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            System.out.println((i+1) + \".\" + tasks.get(i));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        printLineSeparator();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    // Helper function that executes command for \u0027done\u0027"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public static void doDoneCommand(String command){"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        printLineSeparator();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        int taskNum \u003d Integer.parseInt(command) - 1;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        tasks.get(taskNum).markAsDone();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        System.out.println(tasks.get(taskNum));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        printLineSeparator();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        saveTasks();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    // Helper function that executes command for \u0027todo\u0027"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public static void doTodoCommand(String command) throws DukeException{"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        printLineSeparator();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        if (command.isEmpty()){"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        } else{"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            tasks.add(new Todo(command));"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            printTask();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            printLineSeparator();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            saveTasks();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    // Helper function that executes command for \u0027deadline\u0027"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public static void doDeadlineCommand(String command){"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        printLineSeparator();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        String[] taskList \u003d command.split(\" /by \");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        String task \u003d taskList[0];"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        String by \u003d taskList[1];"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        tasks.add(new Deadline(task, by));"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        printTask();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        printLineSeparator();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        saveTasks();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    // Helper function that executes command for \u0027event\u0027"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public static void doEventCommand(String command){"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        printLineSeparator();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        String[] taskList \u003d command.split(\" /at \");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        String task \u003d taskList[0];"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        String at \u003d taskList[1];"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        tasks.add(new Event(task, at));"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        printTask();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        printLineSeparator();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        saveTasks();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    // Helper function that saves files to hard disk"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public static void saveTasks(){"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            String filepath \u003d \"./data/duke.txt\";"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filepath);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            String textToAdd \u003d TasktoString();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            fw.write(textToAdd);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        } catch (IOException e){"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            System.out.println(\"There was an error trying to save file. Check if file exists!\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    // Helper function that turns content of Task into String"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public static String TasktoString(){"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        String taskString \u003d \"\";"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        for(int i \u003d 0; i \u003c tasks.size(); i++){"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "            taskString +\u003d tasks.get(i) + \"\\n\";"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        return taskString;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    // Helper function that executes command for \u0027delete\u0027"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public static void doDeleteCommand(String command){"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        printLineSeparator();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        int taskNum \u003d Integer.parseInt(command) - 1;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        System.out.println(tasks.get(taskNum));"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        tasks.remove(tasks.get(taskNum));"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        printLineSeparator();"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "melylopez99": 177,
      "-": 9
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    // Acts the same as exception class"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "melylopez99": 3
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public Event(String description, String at){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "melylopez99": 14
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        return (\"[\" + (isDone ? \"\\u2713\" : \"\\u2718\") + \"] \"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public void markAsDone() { "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    \tthis.isDone \u003d true; "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        return (this.getStatusIcon() + description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "melylopez99": 20
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    //constructor for the Todo class"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "melylopez99"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "melylopez99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "melylopez99": 12
    }
  }
]

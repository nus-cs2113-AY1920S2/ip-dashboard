[
  {
    "path": "Duke/data.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "T | true | eat"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "T | true | drink"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "T | false | poopie"
      }
    ],
    "authorContributionMap": {
      "Bencotti": 3
    }
  },
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Setting up"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* JDK 11"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* Recommended: IntelliJ IDE"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* Fork this repo to your GitHub account and clone the fork to your computer"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Importing the project into IntelliJ**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `Configure` \u003e `Structure for new Projects` (in older versions of Intellij:`Configure` \u003e `Project Defaults` \u003e `Project Structure`)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   * If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `OK`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. Locate the project directory and click `OK`."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `Create project from existing sources` and click `Next`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "1. Rename the project if you want. Click `Next`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that your src folder is checked. Keep clicking `Next`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Finish`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# Tutorials "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "Duke.Duke Increment | Tutorial"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "---------------|---------------"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "`A-Gradle` | [Gradle Tutorial](tutorials/gradleTutorial.md)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "`A-TextUiTesting` | [Text UI Testing Tutorial](tutorials/textUiTestingTutorial.md)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "`Level-10` | JavaFX tutorials:\u003cbr\u003e→ [Part 1: Introduction to JavaFX][fx1]\u003cbr\u003e→ [Part 2: Creating a GUI for Duke.Duke][fx2]\u003cbr\u003e→ [Part 3: Interacting with the user][fx3]\u003cbr\u003e→ [Part 4: Introduction to FXML][fx4]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "[fx1]: \u003ctutorials/javaFxTutorialPart1.md\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "[fx2]: \u003ctutorials/javaFxTutorialPart2.md\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "[fx3]: \u003ctutorials/javaFxTutorialPart3.md\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "[fx4]: \u003ctutorials/javaFxTutorialPart4.md\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "# Feedback, Bug Reports"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* If you have feedback or bug reports, please post in [se-edu/duke issue tracker](https://github.com/se-edu/duke/issues)."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* We welcome pull requests too."
      }
    ],
    "authorContributionMap": {
      "Bencotti": 2,
      "-": 37
    }
  },
  {
    "path": "Save/data.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "T | true | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "D | false | return book | June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "E | false | project meeting | Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "T | false | poo"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "D | false | return homework | nowT | false | eat"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "E | false | sleep | tonight"
      }
    ],
    "authorContributionMap": {
      "Bencotti": 6
    }
  },
  {
    "path": "src/main/java/Command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import Exceptions.NoParameterException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import Storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import Task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import UI.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private static final char TASK_TODO \u003d \u0027T\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private static final char TASK_EVENT \u003d \u0027E\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private static final char TASK_DEADLINE \u003d \u0027D\u0027;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    String userInput;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    int wordArrayLength;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    char taskType;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public AddCommand(String userCommand, int wordArrayLength, char taskType) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        this.userInput \u003d userCommand;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        this.wordArrayLength  \u003d wordArrayLength;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            switch (taskType) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            case TASK_DEADLINE:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                tasks.addDeadline(userInput, wordArrayLength);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            case TASK_EVENT:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                tasks.addEvent(userInput, wordArrayLength);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            case TASK_TODO:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                tasks.addTodo(userInput, wordArrayLength);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                System.out.println(\"Keyword not recognised!\\n\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        } catch (NoParameterException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            System.out.println(\"Missing parameters\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Bencotti": 47
    }
  },
  {
    "path": "src/main/java/Command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import Storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import Task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import UI.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    protected TaskList tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    protected Storage storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    protected Ui ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public void setCommandVariables(TaskList tasks, Storage storage, Ui ui) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public abstract void execute();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Bencotti": 25
    }
  },
  {
    "path": "src/main/java/Command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import Exceptions.EmptyListException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import Task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private int indexToDelete;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public DeleteCommand(int indexToDelete) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        this.indexToDelete \u003d indexToDelete;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            tasks.deleteTask(indexToDelete);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            storage.rebuildTaskFile(tasks.getTaskList());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        } catch (EmptyListException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            System.out.println(\"[Error][Delete]: \" + e);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Bencotti": 23
    }
  },
  {
    "path": "src/main/java/Command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import Task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private int indexCompleteTask;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public DoneCommand( int indexCompleteTask) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        this.indexCompleteTask \u003d indexCompleteTask;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            boolean successfulUpdate \u003d tasks.completeTask(indexCompleteTask);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            if (successfulUpdate) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                storage.rebuildTaskFile(tasks.getTaskList());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            System.out.println(\"[Error] Please input a task within the range of: 1 - \" + tasks.getTaskListCounter() + \"\\n\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Bencotti": 25
    }
  },
  {
    "path": "src/main/java/Command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import Storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import Task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import UI.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"bye\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Exits the program.\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                                                + \"Example: \" + COMMAND_WORD;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        System.out.println(\"LISA: Bye, hope to see you again!\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        // make use of the tasks and print out number of left over items"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Bencotti": 27
    }
  },
  {
    "path": "src/main/java/Command/FailedCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "public class FailedCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private String errorMessage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public FailedCommand(String errorMessage) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        this.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    //print error message?"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Bencotti": 17
    }
  },
  {
    "path": "src/main/java/Command/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        ui.printHelp();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Bencotti": 8
    }
  },
  {
    "path": "src/main/java/Command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        tasks.printList();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Bencotti": 9
    }
  },
  {
    "path": "src/main/java/Duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static final String TYPE_DEADLINE \u003d \"D\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public Deadline (String description, String date) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        super(description, date);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public void setDate(String date) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        super.date \u003d date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        return TYPE_DEADLINE;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public void printAddDetails(int taskCounter) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        System.out.println(\"The following task has been added:\\n[\" + getTaskType() +\"][\" +"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                            super.getStatusIcon() + \"] \" + super.description + \" (by: \" + super.date + \")\\n\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        System.out.println(\"You\u0027ve got \" + taskCounter + \" task(s) in the list!\\n\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public void printListDetails(int count) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        System.out.println(\"[\"+ getTaskType() + \"][\" + super.getStatusIcon() + \"] \" +"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                            count + \". \" + super.description + \" (by: \" + super.date + \")\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Bencotti": 36
    }
  },
  {
    "path": "src/main/java/Duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import Command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import Exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import Storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import Task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import UI.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import Parser.Parser;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    List of exceptions handled:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    1. General commands"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        a. No recognised command given"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        b. No follow up parameters in command"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    2. Done command"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        a. Out of range"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        b. Not integer"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    3. Load from data.txt"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        a. Not exist"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        b. Error reading / writing"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static void getDateTime() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        LocalDateTime myDateObj \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        DateTimeFormatter myFormatObj \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm:ss\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        String formattedDate \u003d myDateObj.format(myFormatObj);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        System.out.println(formattedDate);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        storage \u003d new Storage();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        // search for folder, create if not found"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        storage.checkFolderPath();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        // populate if data file is found"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        if (storage.checkFileExists()) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            storage.populateList(tasks);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                Command c \u003d Parser.parseCommand(fullCommand);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                c.setCommandVariables(tasks, storage, ui);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                c.execute();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                System.out.println(\"ERROR AT RUN\\n\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Bencotti": 82,
      "-": 2
    }
  },
  {
    "path": "src/main/java/Duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static final String TYPE_EVENT \u003d \"E\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public void setDate(String date) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        super.date \u003d date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public Event(String description, String date){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        super(description, date);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public String getTaskType(){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        return TYPE_EVENT;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public void printAddDetails(int taskCounter) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        System.out.println(\"The following task has been added:\\n[\" + getTaskType() +\"][\" +"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                            getStatusIcon() + \"] \" + super.description + \" (at: \" + super.date + \")\\n\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        System.out.println(\"You\u0027ve got \" + taskCounter + \" task(s) in the list!\\n\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public void printListDetails(int count) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        System.out.println(\"[\"+ getTaskType() + \"][\" + super.getStatusIcon() + \"] \" +"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                            count + \". \" + super.description + \" (by: \" + super.date + \")\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Bencotti": 35
    }
  },
  {
    "path": "src/main/java/Duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static final String TICK \u003d \"✓\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static final String CROSS \u003d \"✘\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    protected String date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        this.date \u003d \"\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public Task(String description, String date) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public boolean getStatus() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        return (isDone ? TICK : CROSS); //return tick or X symbols"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public void printAddDetails(int taskCounter) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        System.out.println(\"The following task has been added:\\n[\" + getTaskType() +\"][\" + getStatusIcon() + \"] \" + getDescription());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        System.out.println(\"\\nYou\u0027ve got \" + taskCounter + \" task(s) in the list!\\n\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public abstract void printListDetails(int count);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Bencotti": 54
    }
  },
  {
    "path": "src/main/java/Duke/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static final String TYPE_TODO \u003d \"T\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public ToDo(String description){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public String getTaskType(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        return TYPE_TODO;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public void printListDetails(int taskCounter) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        System.out.println(\"[\"+ getTaskType() + \"][\" + getStatusIcon() + \"] \" + taskCounter + \". \" + getDescription());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Bencotti": 24
    }
  },
  {
    "path": "src/main/java/Exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "package Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Bencotti": 4
    }
  },
  {
    "path": "src/main/java/Exceptions/EmptyListException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "package Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "public class EmptyListException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public EmptyListException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Bencotti": 7
    }
  },
  {
    "path": "src/main/java/Exceptions/NoParameterException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "package Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "public class NoParameterException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public NoParameterException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Bencotti": 7
    }
  },
  {
    "path": "src/main/java/Parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "package Parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import Command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import Command.ListCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import Command.FailedCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import Command.DoneCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import Command.HelpCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import Command.AddCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import Command.DeleteCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import Command.ExitCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import Exceptions.NoParameterException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import Exceptions.EmptyListException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import org.w3c.dom.ls.LSOutput;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import java.security.spec.RSAOtherPrimeInfo;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private static final int SIZE_DONE_COMMAND \u003d 2;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private static final int SIZE_DELETE_COMMAND \u003d 2;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private static final char TASK_TODO \u003d \u0027T\u0027;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private static final char TASK_EVENT \u003d \u0027E\u0027;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private static final char TASK_DEADLINE \u003d \u0027D\u0027;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static Command parseCommand(String userCommand) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            String[] words \u003d userCommand.split(\" \");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            int wordLength \u003d words.length;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            switch (words[0]) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                //return printList(tasks);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                return prepareDoneCommand(words[1], wordLength);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            case \"help\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                return new HelpCommand();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                return prepareDeleteCommand(words[1], wordLength);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                return new AddCommand(userCommand, wordLength, TASK_TODO);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "               // break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                return new AddCommand(userCommand, wordLength, TASK_EVENT);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                /*"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                    int taskCounter \u003d tasks.size() + 1;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                    addEvent(tasks, userCommand, taskCounter, wordLength);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                } catch (NoParameterException e){"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                    System.out.println(\"Missing Parameters detected!\\n\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                 */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                return new AddCommand(userCommand, wordLength, TASK_DEADLINE);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                /*"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                    int taskCounter \u003d tasks.size() + 1;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                    addDeadline(tasks, userCommand, taskCounter, wordLength);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                } catch (NoParameterException e){"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                    System.out.println(\"Missing Parameters detected!\\n\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                 */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                return new ExitCommand();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                System.out.println(\"Command not recognised\\n\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                return new HelpCommand();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private static Command prepareDeleteCommand(String word, int wordLength) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        if (wordLength !\u003d SIZE_DELETE_COMMAND) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            String errorMessage \u003d \"Wrong format for command \\\"Delete\\\"\\n\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            return new FailedCommand(errorMessage);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        //try {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            int index \u003d Integer.parseInt(word);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            return new DeleteCommand(index);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            /*"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            String errorMessage \u003d \"Please input a valid number\\n\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            return new FailedCommand(errorMessage);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            String errorMessage \u003d \"Task not found, please try again\\n\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            return new FailedCommand(errorMessage);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        } catch (EmptyListException e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            String errorMessage \u003d \"List is empty\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            return new FailedCommand(errorMessage);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "             */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private static Command prepareDoneCommand(String word, int wordLength) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        if (wordLength !\u003d SIZE_DONE_COMMAND) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            String errorMessage \u003d \"Wrong format for command \\\"done\\\"\";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            return new FailedCommand(errorMessage);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "       // try {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            int index \u003d Integer.parseInt(word);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            return new DoneCommand(index);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            /*"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            String errorMessage \u003d \"Please input a valid number\\n\";"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            return new FailedCommand(errorMessage);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            String errorMessage \u003d \"Duke.Task not found, please try again\";"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            return new FailedCommand(errorMessage);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "             */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Bencotti": 123
    }
  },
  {
    "path": "src/main/java/Storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "package Storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import Duke.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import Duke.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import Duke.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import Duke.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import Task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import java.sql.SQLOutput;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private static final char TASK_TODO \u003d \u0027T\u0027;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private static final char TASK_EVENT \u003d \u0027E\u0027;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private static final char TASK_DEADLINE \u003d \u0027D\u0027;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private static final String WORKING_DIRECTORY \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private static final java.nio.file.Path FOLDER_PATH \u003d java.nio.file.Paths.get(WORKING_DIRECTORY, \"Duke\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private static final java.nio.file.Path FILE_PATH \u003d java.nio.file.Paths.get(WORKING_DIRECTORY, \"Duke\", \"data.txt\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static void checkFolderPath() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        // Locate folder location, if missing create folder"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        boolean directoryExists \u003d java.nio.file.Files.exists(FOLDER_PATH);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            if (!directoryExists) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                Files.createDirectory(FOLDER_PATH);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                System.out.println(\"Directory created\\n\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                System.out.println(\"Directory found\\n\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            System.out.println(\"Error creating folder!\\n\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static boolean checkFileExists() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        boolean fileExists \u003d java.nio.file.Files.exists(FILE_PATH);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        return fileExists;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private static void writeTaskToFile(Task newTask, FileWriter myWriter) throws IOException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        if (newTask.getDate().isEmpty()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            myWriter.write(newTask.getTaskType() + \" | \" + newTask.getStatus() + \" | \""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                    + newTask.getDescription() + \"\\n\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            myWriter.write(newTask.getTaskType() + \" | \" + newTask.getStatus() + \" | \""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                    + newTask.getDescription() + \" | \" + newTask.getDate() + \"\\n\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static void saveTask(Task newTask) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        // Append new task to file"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            File file \u003d new File(String.valueOf(FILE_PATH));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            FileWriter myWriter \u003d new FileWriter(file, true);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            writeTaskToFile(newTask, myWriter);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            myWriter.close();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            System.out.println(\"Successfully updated data file!\\n\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            System.out.println(\"Error updating file!\\n\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static void populateList(TaskList tasks) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            List\u003cString\u003e allLines \u003d Files.readAllLines(Paths.get(String.valueOf(FILE_PATH)));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            for (String oneLine : allLines) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                processDataFile(oneLine, tasks);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            System.out.println(\"Error reading data file! \\n\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static void processDataFile(String oneLine, TaskList tasks) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        String[] words \u003d oneLine.split(\" \\\\| \");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        switch (words[0].charAt(0)) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            case TASK_TODO:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                tasks.loadFromFileTodo(words);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            case TASK_DEADLINE:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                tasks.loadFromFileDeadline(words);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            case TASK_EVENT:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                tasks.loadFromFileEvent(words);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                // in case user touches txt file and fills with random data"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                System.out.println(\"Line not added: \" + oneLine + \"\\n\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static void rebuildTaskFile(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        // replace current list with new updated list"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            File file \u003d new File(String.valueOf(FILE_PATH));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            FileWriter myWriter \u003d new FileWriter(file, false);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            for (Task newTask : tasks) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                writeTaskToFile(newTask, myWriter);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            myWriter.close();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            System.out.println(\"Successfully updated data file!\\n\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            System.out.println(\"Error updating file!\\n\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Bencotti": 124
    }
  },
  {
    "path": "src/main/java/Task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "package Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import Duke.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import Duke.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import Duke.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import Duke.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import Exceptions.NoParameterException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import Exceptions.EmptyListException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import Storage.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static final int LENGTH_DEADLINE \u003d 9;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static final int LENGTH_EVENT \u003d 6;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static final int LENGTH_TODO \u003d 5;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static final int LIST_TO_INDEX \u003d 1;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private static ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static boolean completeTask(int indexCompleteTask) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        indexCompleteTask -\u003d 1; // index starts from 0, unlike listing number"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        if ( (indexCompleteTask \u003c tasks.size()) || (indexCompleteTask \u003e 0)) { // check if out of bounce"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            Task currentTask \u003d tasks.get(indexCompleteTask);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            if (currentTask.getStatus()) { // check if already completed"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                System.out.println(\"Duke.Task already completed!\\n\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                currentTask.markAsDone();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                System.out.println( \"[\"+ currentTask.getTaskType() + \"][\" + currentTask.getStatusIcon() + \"] \" + currentTask.getDescription() + \"\\n\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            System.out.println(\"Error: No such index in use\\n\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static void deleteTask(int taskIndex) throws EmptyListException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        if(tasks.isEmpty()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            throw  new EmptyListException();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        taskIndex -\u003d LIST_TO_INDEX;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        if ( (taskIndex \u003c tasks.size()) || (taskIndex \u003e 0)) { // check if out of bounce"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            Task currentTask \u003d tasks.get(taskIndex);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            System.out.println(\"[\"+ currentTask.getTaskType() + \"][\" + currentTask.getStatusIcon() + \"] \" + currentTask.getDescription() + \"\\n\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            tasks.remove(taskIndex);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            System.out.println(\"Now you have \" + tasks.size() +\" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            System.out.println(\"Error: No such index in use\\n\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static String[] processDatedTasks(String taskDescription, int wordLength, int commandLength) throws NoParameterException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        if (wordLength \u003c\u003d 1) { // empty parameter"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            throw new NoParameterException();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            String itemName \u003d taskDescription.substring(commandLength);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            String[] words \u003d itemName.split(\"/\"); // potential problem is not accepting date format with \u0027/\u0027 inside, throw err if more than 2 len"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            for (int i \u003d 0; i \u003c words.length; i++) { // checking for blank tasks, including one char of space"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                if (words[i].isBlank()){"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                    throw new NoParameterException();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            return words;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            System.out.println(\"Please input the date using the specified format\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        System.out.println(\"Ugh null\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static void addDeadline(String userInput, int wordLength) throws NoParameterException {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            String[] words \u003d processDatedTasks(userInput, wordLength, LENGTH_DEADLINE);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            Task newTask \u003d new Deadline(words[0].trim(), words[1].trim());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            tasks.add(newTask);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            newTask.printAddDetails(getTaskListCounter());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            Storage.saveTask(newTask);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            System.out.println(\"Please input the date using the specified format\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static void addEvent(String userInput, int wordLength) throws NoParameterException {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            String[] words \u003d processDatedTasks(userInput, wordLength, LENGTH_EVENT);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            Task newTask \u003d new Event(words[0].trim(), words[1].trim());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            tasks.add(newTask);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            newTask.printAddDetails(getTaskListCounter());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            Storage.saveTask(newTask);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            System.out.println(\"Please input the date using the specified format\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static void addTodo(String userInput, int wordLength) throws NoParameterException {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        if (wordLength \u003c\u003d 1) { // empty parameter"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            throw new NoParameterException();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        String itemName \u003d userInput.substring(LENGTH_TODO);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        if (itemName.isBlank()) { // task is a space/blank char"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            throw new NoParameterException();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        Task newTask \u003d new ToDo(itemName.trim());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        newTask.printAddDetails(getTaskListCounter());"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        Storage.saveTask(newTask);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static int getTaskListCounter() {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static int getTaskIndexCounter() {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        return tasks.size() - 1;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static void loadFromFileTodo(String[] words) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        boolean taskStatus \u003d Boolean.parseBoolean(words[1]);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        String taskDescription \u003d words[2];"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        Task newTask \u003d new ToDo(taskDescription);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        if (taskStatus) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            newTask.markAsDone();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static void loadFromFileDeadline(String[] words) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        System.out.println(\"Word: \" + words[2]);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        boolean taskStatus \u003d Boolean.parseBoolean(words[1]);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        String taskDescription \u003d words[2];"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        String taskDate \u003d words[3];"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        Task newTask \u003d new Deadline(taskDescription, taskDate);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        if (taskStatus) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            newTask.markAsDone();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static void loadFromFileEvent(String[] words ) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        boolean taskStatus \u003d Boolean.parseBoolean(words[1]);;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        String taskDescription \u003d words[2];"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        String taskDate \u003d words[3];"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        Task newTask \u003d new Event(taskDescription, taskDate);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        if (taskStatus) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            newTask.markAsDone();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static void printList() {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        System.out.println(\"Listing tasks below:\");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            System.out.println(\"No tasks at the moment!\");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            for (Task currentTask : tasks) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                currentTask.printListDetails(count);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                count++;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        System.out.println(\"\");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Bencotti": 188
    }
  },
  {
    "path": "src/main/java/UI/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "package UI;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import Duke.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static void printHelp() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        System.out.println(\"Commands: \");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        System.out.println(\"List: lists all recorded tasks \\nusage: list\\n\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        System.out.println(\"Done: mark task as completed \\nusage: done \u003ctask number\u003e\\n\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        System.out.println(\"Todo: Tasks without date/time \\nUsage: todo \u003ctask\u003e \\n(Avoid using other keywords as the first word)\\n\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        System.out.println(\"Event: Duke.Event including date/time \\nUsage: event \u003ctask\u003e /\u003cdate\u003e \\n(Avoid using other keywords as the first word)\\n\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        System.out.println(\"Deadline: Tasks including date/time \\nUsage: deadline \u003ctask\u003e /\u003cdate\u003e \\n(Avoid using other keywords as the first word)\\n\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        System.out.println(\"\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static void showError(String error) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        System.out.println(\"Error: \" + error);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static void showLine() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static String readCommand() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        System.out.print(\"\u003e \");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        String userCommand \u003d input.nextLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        return userCommand;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static void showWelcome() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        String logo \u003d   \"  ,--,       ,---,   .--.--.       ,---,\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                + \",--.\u0027|    ,`--.\u0027 |  /  /    \u0027.    \u0027  .\u0027 \\\\\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                + \"|  | :    |   :  : |  :  /`. /   /  ;    \u0027.\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                + \":  : \u0027    :   |  \u0027 ;  |  |--`   :  :       \\\\\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                + \"|  \u0027 |    |   :  | |  :  ;_     :  |   /\\\\   \\\\\\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                + \"\u0027  | |    \u0027   \u0027  ;  \\\\  \\\\    `.  |  :  \u0027 ;.   :\\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                + \"|  | :    |   |  |   `----.   \\\\ |  |  ;/  \\\\   \\\\\\n\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                + \"\u0027  : |__  \u0027   :  ;   __ \\\\  \\\\  | \u0027  :  | \\\\  \\\\ ,\u0027\\n\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                + \"|  | \u0027.\u0027| |   |  \u0027  /  /`--\u0027  / |  |  \u0027  \u0027--\u0027\\n\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                + \";  :    ; \u0027   :  | \u0027--\u0027.     /  |  :  :\\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                + \"|  ,   /  ;   |.\u0027    `--\u0027---\u0027   |  | ,\u0027\\n\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                + \"---`-\u0027   \u0027---\u0027                 `--\u0027\u0027\\n\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        String welcomeMessage \u003d \"\\n\" + logo + \"\\nYour Lifestyle Scheduling Assistant\\n\\n\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                                + \"type \\\"help\\\" for list of commands\\n\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                                + \"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                                + \"Everyday is a sunny day!\\n\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                                + \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\\nCurrent time: \");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        getDateTime(); // due to testing purposes, will fail when comparing timestamps"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        System.out.println(welcomeMessage);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static void showLoadingError() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        System.out.println(\"Error loading data file\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Bencotti": 68
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "todo add pie crust"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "deadline complete homework /now"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "event tutorial /Tuesday 2pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Bencotti": 7
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "java -classpath ..\\bin Duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "Bencotti": 21
    }
  }
]

[
  {
    "path": "Duke/data.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "T | true | poo"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "D | true | pie  | 2020-12-12 | 1200"
      }
    ],
    "authorContributionMap": {
      "Bencotti": 2
    }
  },
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Setting up"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* JDK 11"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* Recommended: IntelliJ IDE"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* Fork this repo to your GitHub account and clone the fork to your computer"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Importing the project into IntelliJ**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `Configure` \u003e `Structure for new Projects` (in older versions of Intellij:`Configure` \u003e `Project Defaults` \u003e `Project Structure`)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   * If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `OK`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. Locate the project directory and click `OK`."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `Create project from existing sources` and click `Next`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "1. Rename the project if you want. Click `Next`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that your src folder is checked. Keep clicking `Next`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Finish`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# Tutorials "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "Duke.Duke Increment | Tutorial"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "---------------|---------------"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "`A-TextUiTesting` | [Text UI Testing Tutorial](tutorials/textUiTestingTutorial.md)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "# Feedback, Bug Reports"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "* If you have feedback or bug reports, please post in [se-edu/duke issue tracker](https://github.com/se-edu/duke/issues)."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "* We welcome pull requests too."
      }
    ],
    "authorContributionMap": {
      "Bencotti": 1,
      "-": 33
    }
  },
  {
    "path": "Save/data.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "T | true | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "D | false | return book | June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "E | false | project meeting | Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "T | false | poo"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "D | false | return homework | nowT | false | eat"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "E | false | sleep | tonight"
      }
    ],
    "authorContributionMap": {
      "Bencotti": 6
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "##1. Introduction "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "Duke - version LISA, is a CLI task scheduler that supports three "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "different types of tasks (todo, event and deadline). "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "It is simple to use, and comes with a save function to "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "remember your"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "##2. Quick Start"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "1. Ensure you have Java 11 or above installed in your Computer"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "1. Download the latest duke.jar"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "1. Copy the file to the folder you want to use as the home folder."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "1. Run the jar file using `java - jar duke.jar`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "##3. Features "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "###3.1 - Add"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "There are three types of tasks users can add"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "#####Todo:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "* Basic tasks for quick noting down, no date or time required "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "* **Usage**: `todo \u003cdescription\u003e`"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "##### event"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "* Event type tasks, _date and time required_ "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "* **Usage**: `event \u003cdescription\u003e / \u003cdate\u003e \u003ctime\u003e`"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    * date format: YYYY-MM-DD"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    * time format: HHMM  "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "##### deadline"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "* Tasks with a deadline, _date and time required_ "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "* **Usage**: `deadline \u003cdescription\u003e / \u003cdate\u003e \u003ctime\u003e`"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    * date format: YYYY-MM-DD"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    * time format: HHMM  "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "###3.2 - List"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "* Lists all tasks"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "* **Usage**: `list`"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "###3.3 - Delete"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "* Deletes a task from the list"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "* **Usage**: `delete \u003ctask index\u003e`"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    * The index refers to the index number shown in the displayed task list."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    * use `list` to derive task index"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    * index has to be an _integer_"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "###3.4 - Done"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "* Changes the status of a task to completed"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "* **Usage**: `done \u003ctask index\u003e`"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    * The index refers to the index number shown in the displayed task list."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    * use `list` to derive task index"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    * index has to be an _integer_"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "###3.5 - Find"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "* Searches all task descriptions for supplied keyword"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "* **Usage**: `find \u003ckeyword\u003e`"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    * Keyword has to be a _**single word**_"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    * Keyword is case _insensitive_"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "###3.6 - Help"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "* displays the set of commands supported"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "* **Usage**: `help`"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "###3.7 - Exit"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "* Exits the program"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "* **Usage**: `bye`"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "##4. Sample Usage"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "1. Adding new todo task: `todo homework before class` "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "   * Expected outcome: adds \"homework\" to the list "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "1. Adding new deadline task: `deadline bathe after class / 2020-02-29 1500`"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    * Expected outcome: adds \"bathe\" to the list"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " "
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "1. Search for specific keyword: `find class`"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    * Expected outcome: displays the above two tasks since they contain keyword \"class\" in description"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    "
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " ##5. FAQ"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " * How do I save my tasks?"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    * Tasks are saved automatically and loaded upon start up of application"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    * If unable to load, check the directory and file name"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        * Default folder (windows): `C:\\Users\\\u003ccomputer name\u003e\\Duke`"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        * Default file name: `data.txt`"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " "
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " ##6. Command Summary"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " * **Add**:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    1. `todo \u003cdescription\u003e`"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    1. `event \u003cdescription\u003e / \u003cdate\u003e \u003ctime\u003e`"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    1. `deadline \u003cdescription\u003e / \u003cdate\u003e \u003ctime\u003e`"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " * **List**: `list` "
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " * **Delete**: `delete \u003ctask index\u003e` "
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " * **Done**: `done \u003ctask index\u003e` "
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " * **Find**: `find \u003ckeyword\u003e` "
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " * **Help**: `help`"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " * **Exit**: `bye`"
      }
    ],
    "authorContributionMap": {
      "Bencotti": 86,
      "-": 10
    }
  },
  {
    "path": "src/main/java/Command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import Exceptions.MissingParameterException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import Exceptions.NoParameterException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " * Adds a task to the task list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " * Processes the task based on its task type"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private static final char TASK_TODO \u003d \u0027T\u0027;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private static final char TASK_EVENT \u003d \u0027E\u0027;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private static final char TASK_DEADLINE \u003d \u0027D\u0027;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    String userInput;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    int wordArrayLength;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    char taskType;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Convenience constructor using raw values"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @param userCommand full user input, including command and task descriptions"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @param wordArrayLength number of parameters supplied for command"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @param taskType type of task to be processed"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public AddCommand(String userCommand, int wordArrayLength, char taskType) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        this.userInput \u003d userCommand;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        this.wordArrayLength  \u003d wordArrayLength;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            switch (taskType) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            case TASK_DEADLINE:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                tasks.addDeadline(userInput, wordArrayLength);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            case TASK_EVENT:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                tasks.addEvent(userInput, wordArrayLength);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            case TASK_TODO:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                tasks.addTodo(userInput, wordArrayLength);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                System.out.println(\"[Error][New Task]: Keyword not recognised!\\n\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                System.out.println(\"Task types:\\ntodo\\nevent\\ndeadline\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        } catch (NoParameterException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            System.out.println(\"[Error][New Task]: Missing parameters\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            System.out.println(\"Usage:\\n{todo} \u003cDetails\u003e\\n{event or deadline} \u003cDetails\u003e / \u003cYYYY-MM-DD\u003e HH\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        } catch (MissingParameterException | NullPointerException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            System.out.println(\"[Error][New Task] Missing Date or Time field\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            System.out.println(\"[Error][New Task] Wrong format for date\\nPlease record in YYYY-DD-MM format\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            System.out.println(\"[Error][New Task] time should be all numbers in 24Hr format: HHMM\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Bencotti": 65
    }
  },
  {
    "path": "src/main/java/Command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import Storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import Task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import UI.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " * Represents an executable command"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    protected TaskList tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    protected Storage storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    protected Ui ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Called to check if exit command is given"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @return condition whether program should continue looping or exit"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Supplies the objects other commands will call upon"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @param tasks  current instance of tasks and corresponding tasklist methods"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @param storage instance of storage object"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @param ui instance of user interaction object"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public void setCommandVariables(TaskList tasks, Storage storage, Ui ui) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Executes user command processed by parser"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public abstract void execute();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Bencotti": 42
    }
  },
  {
    "path": "src/main/java/Command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import Exceptions.EmptyListException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " * Deletes a task from the given task list object,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " * updates data file upon completion"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private String indexToDelete;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Convenience constructor using raw values"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @param indexToDelete String input of task index, will be checked later if it is a valid integer"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public DeleteCommand(String indexToDelete) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        this.indexToDelete \u003d indexToDelete;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            tasks.deleteTask(Integer.parseInt(indexToDelete));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            storage.rebuildTaskFile(tasks.getTaskList());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        } catch (EmptyListException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            System.out.println(\"[Error][Delete]: \" + e.getMessage());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            System.out.println(\"[Error][Delete]: Please input task number as a number, instead of spelling it out\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            System.out.println(\"[Error][Delete]: Please input a task within the range of: 1 - \" + tasks.getTaskListCounter());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Bencotti": 35
    }
  },
  {
    "path": "src/main/java/Command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " * Changes the status of a task to complete"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " * updates data file upon completion"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private String indexCompleteTask;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Convenience constructor using raw values"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @param indexCompleteTask String input of task index, will be checked later if it is a valid integer"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public DoneCommand( String indexCompleteTask) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        this.indexCompleteTask \u003d indexCompleteTask;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            boolean successfulUpdate \u003d tasks.completeTask(Integer.parseInt(indexCompleteTask));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            if (successfulUpdate) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                storage.rebuildTaskFile(tasks.getTaskList());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            System.out.println(\"[Error][Done] Please input a task within the range of: 1 - \" + tasks.getTaskListCounter() + \"\\n\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            System.out.println(\"[Error][Done] Please input task number as a number, instead of spelling it out\\n\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Bencotti": 34
    }
  },
  {
    "path": "src/main/java/Command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " * Sends the exit signal to main loop, program is exited after this command"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Check if exit command is given"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @return signal to main loop that program will be terminated"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        System.out.println(\"LISA: Bye, hope to see you again!\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        // make use of the tasks and print out number of left over items"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Bencotti": 22
    }
  },
  {
    "path": "src/main/java/Command/FailedCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " * Assist auxiliary parser methods if failed validation"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "public class FailedCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private String errorMessage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Saves a custom message when command is returned"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @param errorMessage"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public FailedCommand(String errorMessage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        this.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        System.out.println(errorMessage);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Bencotti": 24
    }
  },
  {
    "path": "src/main/java/Command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import Duke.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import Exceptions.NoParameterException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " * Find tasks based on keyword provided"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private String searchItem;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Convenience constructor using raw values"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @param searchItem keyword used to search"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public FindCommand(String searchItem) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        this.searchItem \u003d searchItem;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Searches for keyword in all task description"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * search term is case insensitive"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            ArrayList\u003cTask\u003e searchTasks \u003d tasks.getTaskList();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            String regex \u003d \"\\\\b\" + searchItem + \"\\\\b\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            Pattern pattern \u003d Pattern.compile(regex, Pattern.CASE_INSENSITIVE);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            for (Task task : searchTasks) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                Matcher matchQuery \u003d pattern.matcher(task.getDescription());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                if (matchQuery.find()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                    foundTasks.add(task);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            if (!foundTasks.isEmpty()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                int taskIndexCounter \u003d 1;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                for (Task task : foundTasks) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                    task.printListDetails(taskIndexCounter++);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                System.out.println(\"No match found!\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            System.out.println(\"Please input a valid keyword!\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Bencotti": 55
    }
  },
  {
    "path": "src/main/java/Command/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " * Displays a list of commands available"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        ui.printHelp();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Bencotti": 11
    }
  },
  {
    "path": "src/main/java/Command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " * Displays the list of tasks stored, both completed and uncompleted"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        tasks.printList();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Bencotti": 12
    }
  },
  {
    "path": "src/main/java/Duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " * Specifies the additional requirements for deadline type tasks"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static final String TYPE_DEADLINE \u003d \"D\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public Deadline (String description, String date, String time) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        super(description, date, time);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Retrieve the code for current type of task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @return deadline task type code"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        return TYPE_DEADLINE;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Prints details of task upon adding"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Default is set for tasks without date"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @param taskCounter current index of task"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public void printAddDetails(int taskCounter) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        System.out.println(\"The following task has been added:\\n[\" + getTaskType() +\"][\" +"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                            super.getStatusIcon() + \"] \" + super.description + \" (by: \" + super.date + \")\\n\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        System.out.println(\"You\u0027ve got \" + taskCounter + \" task(s) in the list!\\n\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public void printListDetails(int count) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        System.out.println(\"[\"+ getTaskType() + \"][\" + super.getStatusIcon() + \"] \" +"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                            count + \". \" + super.description + \" (by: \" + super.date + \" at \" + time +\")\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Bencotti": 44
    }
  },
  {
    "path": "src/main/java/Duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import Command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import Storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import Task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import UI.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import Parser.Parser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * The Duke program implements an application that simulates is a task scheduler"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * It allow the saving of tasks to a file and reloading of data when application starts"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        storage \u003d new Storage();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        // search for folder, create if not found"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        storage.checkFolderPath();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        // populate if data file is found"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        if (storage.checkFileExists()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            storage.populateList(tasks);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Runner method to read and execute user commands"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Loops until \"bye\" command given"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                Command c \u003d Parser.parseCommand(fullCommand);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                c.setCommandVariables(tasks, storage, ui);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                c.execute();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                System.out.println(\"[Error][Input]: Missing parameters detected\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            finally {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Main method for Duke program"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @param args"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Bencotti": 66,
      "-": 2
    }
  },
  {
    "path": "src/main/java/Duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " * Specifies the additional requirements for event type tasks"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static final String TYPE_EVENT \u003d \"E\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public Event(String description, String date, String time){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        super(description, date, time);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Retrieve the code for current type of task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @return deadline task type code"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public String getTaskType(){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        return TYPE_EVENT;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Prints details of task upon adding"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Default is set for tasks without date"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @param taskCounter current index of task"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public void printAddDetails(int taskCounter) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        System.out.println(\"The following task has been added:\\n[\" + getTaskType() +\"][\" +"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                            getStatusIcon() + \"] \" + super.description + \" (by: \" + super.date + \" at \" + time +\")\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        System.out.println(\"You\u0027ve got \" + taskCounter + \" task(s) in the list!\\n\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public void printListDetails(int count) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        System.out.println(\"[\"+ getTaskType() + \"][\" + super.getStatusIcon() + \"] \" +"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                            count + \". \" + super.description + \" (by: \" + super.date + \" at \" + time +\")\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Bencotti": 45
    }
  },
  {
    "path": "src/main/java/Duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " * Default task class, provides skeleton for specific task types"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static final String TICK \u003d \"✓\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static final String CROSS \u003d \"✘\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    //protected String date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    protected Integer time;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Constructs for task types without date field"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @param description information about the task"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        this.date \u003d null;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        this.time \u003d null;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Constructor for task types with date and time field"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @param description information about the task"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @param date Stored in a YYYY-MM-DD format"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public Task(String description, String date, String time) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        this.date \u003d LocalDate.parse(date, formatter);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        this.time \u003d Integer.parseInt(time);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public boolean getStatus() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Returns symbol for status of task"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @return tick for done, cross for not done"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        return (isDone ? TICK : CROSS); //return tick or X symbols"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public Integer getTime() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Prints details of task upon adding"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Default is set for tasks without date"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @param taskCounter current index of task"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public void printAddDetails(int taskCounter) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        System.out.println(\"The following task has been added:\\n[\" + getTaskType() +\"][\" + getStatusIcon() + \"] \" + getDescription());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        System.out.println(\"\\nYou\u0027ve got \" + taskCounter + \" task(s) in the list!\\n\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public abstract void printListDetails(int count);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Bencotti": 93
    }
  },
  {
    "path": "src/main/java/Duke/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " * Specifies the additional requirements for todo type tasks"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static final String TYPE_TODO \u003d \"T\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public ToDo(String description){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Retrieve the code for current type of task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @return deadline task type code"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public String getTaskType(){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        return TYPE_TODO;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Prints details of task upon adding"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Default is set for tasks without date"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @param taskCounter current index of task"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public void printListDetails(int taskCounter) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        System.out.println(\"[\"+ getTaskType() + \"][\" + getStatusIcon() + \"] \" + taskCounter + \". \" + getDescription());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Bencotti": 37
    }
  },
  {
    "path": "src/main/java/Exceptions/EmptyListException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "package Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " * Custom exception for delete command"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "public class EmptyListException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public EmptyListException(String errorMessage) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Bencotti": 10
    }
  },
  {
    "path": "src/main/java/Exceptions/MissingParameterException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "package Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " * Custom exception to handing missing parameters"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "public class MissingParameterException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public MissingParameterException() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Bencotti": 10
    }
  },
  {
    "path": "src/main/java/Exceptions/NoParameterException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "package Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " * Custom exception when no parameter / whitespace is detected for commands"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "public class NoParameterException extends Exception{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public NoParameterException(String errorMessage) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Bencotti": 10
    }
  },
  {
    "path": "src/main/java/Parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "package Parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import Command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import Command.ListCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import Command.FailedCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import Command.DoneCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import Command.HelpCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import Command.AddCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import Command.DeleteCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import Command.ExitCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import Command.FindCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " * Parses user input"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private static final int SIZE_DONE_COMMAND \u003d 2;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private static final int SIZE_DELETE_COMMAND \u003d 2;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private static final char TASK_TODO \u003d \u0027T\u0027;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private static final char TASK_EVENT \u003d \u0027E\u0027;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private static final char TASK_DEADLINE \u003d \u0027D\u0027;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Parses user input into command for execution"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @param userCommand user input including command word and parameters"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @return  command based on user input"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static Command parseCommand(String userCommand) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            String[] words \u003d userCommand.split(\" \");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            int wordLength \u003d words.length;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            switch (words[0]) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                return prepareDoneCommand(words[1], wordLength);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            case \"help\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                return new HelpCommand();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                return prepareDeleteCommand(words[1], wordLength);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                return new AddCommand(userCommand, wordLength, TASK_TODO);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                return new AddCommand(userCommand, wordLength, TASK_EVENT);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                return new AddCommand(userCommand, wordLength, TASK_DEADLINE);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                return new FindCommand(words[1]);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                return new ExitCommand();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                System.out.println(\"Command not recognised\\n\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                return new HelpCommand();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Auxiliary function for delete command"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * validates input before parsing"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @param wordIndex index of task to be processed"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @param wordLength length of user input for validation"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @return command to execute"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private static Command prepareDeleteCommand(String wordIndex, int wordLength) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        if (wordLength !\u003d SIZE_DELETE_COMMAND) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            String errorMessage \u003d \"Wrong format for command \\\"Delete\\\"\\n\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            return new FailedCommand(errorMessage);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            return new DeleteCommand(wordIndex);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Auxiliary function for done command"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * validates input before parsing"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @param wordIndex index of task to be processed"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @param wordLength length of user input for validation"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @return command to execute"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private static Command prepareDoneCommand(String wordIndex, int wordLength) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        if (wordLength !\u003d SIZE_DONE_COMMAND) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            String errorMessage \u003d \"Wrong format for command \\\"Done\\\"\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            return new FailedCommand(errorMessage);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            return new DoneCommand(wordIndex);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Bencotti": 100
    }
  },
  {
    "path": "src/main/java/Storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "package Storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import Duke.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import Duke.ToDo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import Task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " * Represents the fle to store task data"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private static final char TASK_TODO \u003d \u0027T\u0027;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private static final char TASK_EVENT \u003d \u0027E\u0027;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private static final char TASK_DEADLINE \u003d \u0027D\u0027;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private static final String WORKING_DIRECTORY \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private static final java.nio.file.Path FOLDER_PATH \u003d java.nio.file.Paths.get(WORKING_DIRECTORY, \"Duke\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private static final java.nio.file.Path FILE_PATH \u003d java.nio.file.Paths.get(WORKING_DIRECTORY, \"Duke\", \"data.txt\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Locate folder location and check availability"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * If missing create folder"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static void checkFolderPath() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        boolean directoryExists \u003d java.nio.file.Files.exists(FOLDER_PATH);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            if (!directoryExists) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                Files.createDirectory(FOLDER_PATH);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                System.out.println(\"Directory created\\n\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                System.out.println(\"Directory found\\n\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            System.out.println(\"Error creating folder!\\n\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Check whether data file has is present in directory"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @return status of file availability"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static boolean checkFileExists() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        boolean fileExists \u003d java.nio.file.Files.exists(FILE_PATH);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        return fileExists;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Writes newly created task to data file"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @param newTask newly created task"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @param myWriter FileWriter object to operate on task"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @throws IOException if error writing to file"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private static void writeTaskToFile(Task newTask, FileWriter myWriter) throws IOException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        if (newTask instanceof ToDo) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            myWriter.write(newTask.getTaskType() + \" | \" + newTask.getStatus() + \" | \""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                    + newTask.getDescription() + \"\\n\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            myWriter.write(newTask.getTaskType() + \" | \" + newTask.getStatus() + \" | \""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                    + newTask.getDescription() + \" | \" + newTask.getDate().toString() + \" | \" + newTask.getTime() + \"\\n\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Parser method for task objects to call when requires saving"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Sets up environment for writing to file"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @param newTask newly created task"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static void saveTask(Task newTask) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            File file \u003d new File(String.valueOf(FILE_PATH));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            FileWriter myWriter \u003d new FileWriter(file, true);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            writeTaskToFile(newTask, myWriter);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            myWriter.close();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            System.out.println(\"Successfully updated data file!\\n\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            System.out.println(\"Error updating file!\\n\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Reads in entries from data file line by line"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     *"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @param tasks instance of the list of tasks"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static void populateList(TaskList tasks) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            List\u003cString\u003e allLines \u003d Files.readAllLines(Paths.get(String.valueOf(FILE_PATH)));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            for (String oneLine : allLines) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                processDataFile(oneLine, tasks);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            System.out.println(\"Error reading data file! \\n\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Parse entry in datafile according to data type"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     *"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @param oneLine current entry in data file"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @param tasks instance of the list of tasks"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static void processDataFile(String oneLine, TaskList tasks) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        String[] words \u003d oneLine.split(\" \\\\| \");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            switch (words[0].charAt(0)) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            case TASK_TODO:"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                tasks.loadFromFileTodo(words);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            case TASK_DEADLINE:"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                tasks.loadFromFileDeadline(words);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            case TASK_EVENT:"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                tasks.loadFromFileEvent(words);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                // in case user touches txt file and fills with random data"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                System.out.println(\"Line not added: \" + oneLine + \"\\n\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException | NumberFormatException e) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            System.out.println(\"Corrupted entry detected, skipping entry\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Updates the entire task file after delete or complete command is given"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     *"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @param tasks instance of the list of tasks"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static void rebuildTaskFile(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        // replace current list with new updated list"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            File file \u003d new File(String.valueOf(FILE_PATH));"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            FileWriter myWriter \u003d new FileWriter(file, false);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            for (Task newTask : tasks) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                writeTaskToFile(newTask, myWriter);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            myWriter.close();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            System.out.println(\"Successfully updated data file!\\n\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            System.out.println(\"Error updating file!\\n\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Bencotti": 159
    }
  },
  {
    "path": "src/main/java/Task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "package Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import Duke.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import Duke.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import Duke.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import Duke.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import Exceptions.MissingParameterException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import Exceptions.NoParameterException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import Exceptions.EmptyListException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import Storage.Storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " * Instance of tasks used in program"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " * Contains methods required to modify tasks"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static final int LENGTH_DEADLINE \u003d 9;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static final int LENGTH_EVENT \u003d 6;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static final int LENGTH_TODO \u003d 5;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static final int LIST_TO_INDEX \u003d 1;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static final String TASK_INCORRECT_PARAMETERS_DETECTED \u003d \"[Error][New Task]: Incorrect Parameters detected\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static final int DATETIME_PARAMETER_SIZE \u003d 2;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    private static ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Creating new instance of task list"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Updates task status upon completion"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @param indexCompleteTask index of complete task"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @return whether update is successful or not"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static boolean completeTask(int indexCompleteTask) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        indexCompleteTask -\u003d 1; // index starts from 0, unlike listing number"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        if ( (indexCompleteTask \u003c tasks.size()) || (indexCompleteTask \u003e 0)) { // check if out of bounce"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            Task currentTask \u003d tasks.get(indexCompleteTask);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            if (currentTask.getStatus()) { // check if already completed"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                System.out.println(\"Duke.Task already completed!\\n\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                currentTask.markAsDone();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                System.out.println( \"[\"+ currentTask.getTaskType() + \"][\" + currentTask.getStatusIcon() + \"] \" + currentTask.getDescription() + \"\\n\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            System.out.println(\"Error: No such index in use\\n\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Deletion of task from task list"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @param taskIndex index of task to be deleted"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @throws EmptyListException if task list is empty"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static void deleteTask(int taskIndex) throws EmptyListException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        if(tasks.isEmpty()) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            throw  new EmptyListException(\"List is currently empty!\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        taskIndex -\u003d LIST_TO_INDEX;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        if ( (taskIndex \u003c tasks.size()) || (taskIndex \u003e 0)) { // check if out of bounce"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            Task currentTask \u003d tasks.get(taskIndex);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            System.out.println(\"[\"+ currentTask.getTaskType() + \"][\" + currentTask.getStatusIcon() + \"] \" + currentTask.getDescription() + \"\\n\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            tasks.remove(taskIndex);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            System.out.println(\"Now you have \" + tasks.size() +\" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            System.out.println(\"Error: No such index in use\\n\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Processes task types with date and time fields"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @param taskDescription description of task"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @param wordLength    length of user command for parameter validation"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @param commandLength length of command word for extraction"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @return word array for task fields"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @throws NoParameterException"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @throws MissingParameterException"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static String[] processDatedTasks(String taskDescription, int wordLength, int commandLength)"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                                            throws NoParameterException, MissingParameterException {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        if (wordLength \u003c\u003d 1) { // empty parameter"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            throw new NoParameterException(\"[Error][New Task]: Incorrect Parameters detected\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            String itemName \u003d taskDescription.substring(commandLength);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            String[] words \u003d itemName.split(\"/\"); // potential problem is not accepting date format with \u0027/\u0027 inside, throw err if more than 2 len"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            for (int i \u003d 0; i \u003c words.length; i++) { // checking for blank tasks, including one char of space"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                if (words[i].isBlank()){"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                    throw new NoParameterException(TASK_INCORRECT_PARAMETERS_DETECTED);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            return words;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            System.out.println(\"Please input the date using the specified format\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        System.out.println(\"[Error]: Incorrect input found\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Separating date and time from parsed parameter"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     *"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @param dateTime parameter from user input task"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @return array of size two for date and time"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @throws MissingParameterException if either date or time is missing"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static String[] formatDatetime(String dateTime) throws MissingParameterException {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            String[] splitDateTime \u003d dateTime.trim().split(\" \");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            if (splitDateTime.length !\u003d DATETIME_PARAMETER_SIZE) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                throw new NullPointerException();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            for (int i \u003d 0; i \u003c splitDateTime.length; i++) { // checking for blank tasks, including one char of space"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                if (splitDateTime[i].isBlank()){"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                    throw new MissingParameterException();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            return splitDateTime;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            System.out.println(\"Please input the date using the specified format\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Adding deadline task into task list"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     *"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @param userInput user input"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @param wordLength length of user input for validation"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @throws NoParameterException no parameters given"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @throws MissingParameterException not all parameters filled"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static void addDeadline(String userInput, int wordLength) throws NoParameterException, MissingParameterException {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            String[] words \u003d processDatedTasks(userInput, wordLength, LENGTH_DEADLINE);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            String[] splitDateTime \u003d formatDatetime(words[1]);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            if (splitDateTime.length !\u003d DATETIME_PARAMETER_SIZE) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                throw new MissingParameterException();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            Task newTask \u003d new Deadline(words[0], splitDateTime[0], splitDateTime[1]);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            tasks.add(newTask);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            newTask.printAddDetails(getTaskListCounter());"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            Storage.saveTask(newTask);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            System.out.println(\"Please input the date using the specified format\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Adding event task into task list"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     *"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @param userInput user input"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @param wordLength length of user input for validation"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @throws NoParameterException no parameters given"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @throws MissingParameterException not all parameters filled"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static void addEvent(String userInput, int wordLength) throws NoParameterException, MissingParameterException {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            String[] words \u003d processDatedTasks(userInput, wordLength, LENGTH_EVENT);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            String[] splitDateTime \u003d formatDatetime(words[1]);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            if (splitDateTime.length !\u003d DATETIME_PARAMETER_SIZE) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                throw new MissingParameterException();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            Task newTask \u003d new Event(words[0], splitDateTime[0], splitDateTime[1]);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            tasks.add(newTask);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            newTask.printAddDetails(getTaskListCounter());"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            Storage.saveTask(newTask);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            System.out.println(\"Please input the date using the specified format\");"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Adding deadline task into task list"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     *"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @param userInput user input"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @param wordLength length of user input for validation"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @throws NoParameterException no parameters given"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static void addTodo(String userInput, int wordLength) throws NoParameterException {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        if (wordLength \u003c\u003d 1) { // empty parameter"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            throw new NoParameterException(TASK_INCORRECT_PARAMETERS_DETECTED);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        String itemName \u003d userInput.substring(LENGTH_TODO);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        if (itemName.isBlank()) { // task is a space/blank char"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            throw new NoParameterException(TASK_INCORRECT_PARAMETERS_DETECTED);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        Task newTask \u003d new ToDo(itemName.trim());"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        newTask.printAddDetails(getTaskListCounter());"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        Storage.saveTask(newTask);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Retrieves the current size of task list"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     *"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @return number of tasks"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static int getTaskListCounter() {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Loading todo task from data file"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     *"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @param words entry of task in data file"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static void loadFromFileTodo(String[] words) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        boolean taskStatus \u003d Boolean.parseBoolean(words[1]);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        String taskDescription \u003d words[2];"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        Task newTask \u003d new ToDo(taskDescription);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        if (taskStatus) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            newTask.markAsDone();"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Loading deadline task from data file"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     *"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @param words entry of task in data file"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static void loadFromFileDeadline(String[] words) {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        boolean taskStatus \u003d Boolean.parseBoolean(words[1]);"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        String taskDescription \u003d words[2];"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        String taskDate \u003d words[3];"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        String taskTime \u003d words[4];"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        Task newTask \u003d new Deadline(taskDescription, taskDate, taskTime);"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        if (taskStatus) {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            newTask.markAsDone();"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Loading event task from data file"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     *"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @param words entry of task in data file"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static void loadFromFileEvent(String[] words ) {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        boolean taskStatus \u003d Boolean.parseBoolean(words[1]);;"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        String taskDescription \u003d words[2];"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        String taskDate \u003d words[3];"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        String taskTime \u003d words[4];"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        Task newTask \u003d new Event(taskDescription, taskDate, taskTime);"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        if (taskStatus) {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            newTask.markAsDone();"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Displays the full task list"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static void printList() {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        System.out.println(\"Listing tasks below:\");"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            System.out.println(\"No tasks at the moment!\");"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            for (Task currentTask : tasks) {"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                currentTask.printListDetails(count);"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                count++;"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            }"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        }"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        System.out.println(\"\");"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Retrieves actual task list"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Bencotti": 295
    }
  },
  {
    "path": "src/main/java/UI/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "package UI;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " * Text UI of the application"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Bencotti"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Prints the list of operations supported"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static void printHelp() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        String commandList \u003d"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            \"Commands: \""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            + \"Exit: Exits program \\nUsage: bye\\n\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            + \"List: Lists all recorded tasks \\nUsage: list\\n\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            + \"Done: Mark task as completed \\nUsage: done \u003ctask number\u003e\\n\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            + \"Todo: Basic Tasks without date/time \\nUsage: todo \u003ctask\u003e \\n\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            + \"Event: Event tasks including date/time \\nUsage: event \u003ctask\u003e /\u003cYYYY-MM-DD\u003e \u003cHHMM\u003e \\n\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            + \"Deadline: Deadline tasks including date/time \\nUsage: deadline \u003ctask\u003e /\u003cYYYY-MM-DD\u003e \u003cHHMM\u003e \\n\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            + \"Delete: Deletes task from list \\nUsage: delete \u003ctask number\u003e\\n\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "            + \"Find: Search for task using keyword \\nUsage: find \u003ckey word\u003e\\nnote: Keyword is only one word\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        System.out.println(commandList);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static void showLine() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * Prompts user for input"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     * @return String containing user command for parsing"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static String readCommand() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        System.out.print(\"\u003e \");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        String userCommand \u003d input.nextLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        return userCommand;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    public static void showWelcome() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        String logo \u003d   \"  ,--,       ,---,   .--.--.       ,---,\\n\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                + \",--.\u0027|    ,`--.\u0027 |  /  /    \u0027.    \u0027  .\u0027 \\\\\\n\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                + \"|  | :    |   :  : |  :  /`. /   /  ;    \u0027.\\n\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                + \":  : \u0027    :   |  \u0027 ;  |  |--`   :  :       \\\\\\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                + \"|  \u0027 |    |   :  | |  :  ;_     :  |   /\\\\   \\\\\\n\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                + \"\u0027  | |    \u0027   \u0027  ;  \\\\  \\\\    `.  |  :  \u0027 ;.   :\\n\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                + \"|  | :    |   |  |   `----.   \\\\ |  |  ;/  \\\\   \\\\\\n\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                + \"\u0027  : |__  \u0027   :  ;   __ \\\\  \\\\  | \u0027  :  | \\\\  \\\\ ,\u0027\\n\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                + \"|  | \u0027.\u0027| |   |  \u0027  /  /`--\u0027  / |  |  \u0027  \u0027--\u0027\\n\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                + \";  :    ; \u0027   :  | \u0027--\u0027.     /  |  :  :\\n\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                + \"|  ,   /  ;   |.\u0027    `--\u0027---\u0027   |  | ,\u0027\\n\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                + \"---`-\u0027   \u0027---\u0027                 `--\u0027\u0027\\n\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        String welcomeMessage \u003d \"\\n\" + logo + \"\\nYour Lifestyle Scheduling Assistant\\n\\n\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                                + \"type \\\"help\\\" for list of commands\\n\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                                + \"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                                + \"Everyday is a sunny day!\\n\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "                                + \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "        System.out.println(welcomeMessage);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Bencotti": 65
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "todo add pie crust"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "deadline complete homework /now"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "event tutorial /Tuesday 2pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Bencotti": 7
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "java -classpath ..\\bin Duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Bencotti"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Bencotti"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "Bencotti": 21
    }
  }
]

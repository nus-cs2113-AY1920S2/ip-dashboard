[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brandoncjh": 14
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "//Scanner object takes in user input"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "    public static final int MAX_NO_OF_TASKS \u003d 100;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "    public static final int MAX_SUBSTRING_FIELDS \u003d 2;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "    public static int taskCount \u003d 0;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "    private static String curlyLine \u003d \"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "    private static String underscoredLine \u003d \"\\t____________________________________________________________\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "    private static void sayIntro(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        String introMessage \u003d curlyLine + System.lineSeparator() + \"Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "                + \"What can I do for you?\\n\" + curlyLine + System.lineSeparator();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        System.out.println(introMessage);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "    private static void sayGoodbye(){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        String goodbyeMessage \u003d curlyLine + System.lineSeparator() + \"Bye! Hope to see you again soon\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "                + curlyLine + System.lineSeparator();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        String goodbyeMessage2 \u003d \"********************CONNECTION TERMINATED********************\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        System.out.println(goodbyeMessage);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        System.out.println(goodbyeMessage2);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "    public static String[] splitUserInput(String originalInput) throws ArrayIndexOutOfBoundsException, "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "    NoDescriptionException, NoRemarkException, IllegalKeywordException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        String[] returnValue \u003d new String[MAX_SUBSTRING_FIELDS];"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        if (originalInput.contains(\" /\")){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "            String[] separatedSections \u003d originalInput.split(\" /\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "            String commandWord \u003d separatedSections[0].split(\" \", 2)[0];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "            //todo should not have a remark section"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "            if (commandWord.equals(\"todo\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "                throw new IllegalKeywordException();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "            // get description part of userInput without the command word"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "            try{"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "                returnValue[0] \u003d separatedSections[0].split(\" \", 2)[1];"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "                throw new ArrayIndexOutOfBoundsException();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "            "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "            if (returnValue[0].trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "                throw new NoDescriptionException();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "            // get additional remark part of userInput"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "            returnValue[1] \u003d separatedSections[1];"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "            boolean isRemarksEmpty \u003d ((commandWord.equals(\"event\") || commandWord.equals(\"deadline\")) "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "            \u0026\u0026 returnValue[1].trim().length() \u003d\u003d 0);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "            if (isRemarksEmpty){"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "                throw new NoRemarkException();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "            return returnValue;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "            // get description part of userInput without the command word"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "                returnValue[0] \u003d originalInput.trim().split(\" \", 2)[1];"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "                throw new NoDescriptionException();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "                "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "            "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "            // remark column is an empty string"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "            returnValue[1] \u003d \"\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "            return returnValue;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "    "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "    public static void addTaskToList(Task[] listInput) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        //if list empty, inform user and await next command"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        if (taskCount \u003d\u003d 0) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "            System.out.println(underscoredLine + System.lineSeparator() + \"\\tThe list is empty.\""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "                    + System.lineSeparator() + underscoredLine);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        //if list non-empty, print out all existing tasks"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        System.out.println(underscoredLine + System.lineSeparator());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        for (int i \u003d 0; i \u003c taskCount; i++) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "            System.out.println(\"\\t\" + Integer.toString(i + 1) + \".\" + listInput[i].toString());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        System.out.println(underscoredLine);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        return;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "    public static void updateTaskDone(String taskNumberInput, Task[] listInput){"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        int queryNumber \u003d Integer.parseInt(taskNumberInput);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        boolean isOutOfRange \u003d queryNumber \u003c 1 || queryNumber \u003e taskCount;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        "
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        //handle case where user inputs non-existing task number to mark as done"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        if (isOutOfRange){"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "            System.out.println(underscoredLine + System.lineSeparator() + \"\\tInvalid task number.\""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "                    + System.lineSeparator() + underscoredLine);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        //handle case where user tries to mark as done an already completed task"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        boolean isTaskAlreadyDone \u003d listInput[queryNumber-1].getIsDone();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        "
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        if (isTaskAlreadyDone){"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "            System.out.println(underscoredLine + System.lineSeparator()"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "                    + \"\\tThis task has already been marked completed.\" + System.lineSeparator() + underscoredLine);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        listInput[queryNumber-1].markAsDone();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        String taskDoneMessage \u003d \"\\tGreat job! I\u0027ve marked this task as done:\\n\\t\" + Integer.toString(queryNumber)"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "                + \".[\" + listInput[queryNumber-1].getStatusIcon() + \"] \" + listInput[queryNumber-1].getDescription();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        System.out.println(underscoredLine + System.lineSeparator() + taskDoneMessage + System.lineSeparator()"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "                + underscoredLine);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "    private static void insertNewTask(Task[] taskList, String userInput, String[] tokenizedInput) throws "
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "    IllegalKeywordException, NoDescriptionException, NoRemarkException {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        Task newTask;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        switch (tokenizedInput[0]) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        case (\"todo\"):"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "            newTask \u003d new Todo(splitUserInput(userInput)[0], splitUserInput(userInput)[1]);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        case (\"deadline\"):"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "            newTask \u003d new Deadline(splitUserInput(userInput)[0], splitUserInput(userInput)[1]);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        case (\"event\"):"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "            newTask \u003d new Event(splitUserInput(userInput)[0], splitUserInput(userInput)[1]);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "            throw new IllegalKeywordException();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "            //break;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        taskList[taskCount] \u003d newTask;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        taskCount++;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        String taskAddedMessage \u003d \"\\tGot it. I\u0027ve added this task: \\n\\t\" + newTask.toString() + System.lineSeparator()"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "                + \"\\tNow you have \" + taskCount + \" tasks in the list.\\n\";"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        System.out.println(underscoredLine + System.lineSeparator() + taskAddedMessage + System.lineSeparator()"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "                + underscoredLine);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        Task[] taskList \u003d new Task[MAX_NO_OF_TASKS];"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        int taskCount \u003d 0;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        String userInput;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        boolean isExitCommandInvoked \u003d false;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        sayIntro();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        //easier to identify lines input by user (per Python)"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        System.out.print(\"\u003e\u003e\u003e\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        "
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        while (in.hasNextLine()) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "            userInput \u003d in.nextLine();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "                String testBlankInput \u003d userInput.split(\" \")[0];"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "                System.out.println(underscoredLine);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "                System.out.println(\"\\t\\u2639 !!ERROR!! Command cannot be whitespaces.\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "                System.out.println(underscoredLine);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "                System.out.print(\"\u003e\u003e\u003e\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "            String[] tokenizedInput \u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "            switch (tokenizedInput[0]) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "            case (\"bye\"):"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "                isExitCommandInvoked \u003d true;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "            case (\"list\"):"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "                addTaskToList(taskList);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "            case(\"done\"):"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "                updateTaskDone(tokenizedInput[1], taskList);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "                try{"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "                    insertNewTask(taskList, userInput, tokenizedInput);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "                } catch (IllegalKeywordException e) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "                    System.out.println(underscoredLine);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "                    System.out.println(\"\\t\\u2639 !!ERROR!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "                    System.out.println(underscoredLine);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "                } catch (NoDescriptionException e) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "                    System.out.println(underscoredLine);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "                    System.out.println(\"\\t\\u2639 !!ERROR!! The description of a \" + tokenizedInput[0] + \" cannot be empty.\");"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "                    System.out.println(underscoredLine);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "                } catch (NoRemarkException e) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "                    System.out.println(underscoredLine);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "                    System.out.println(\"\\t\\u2639 !!ERROR!! The remarks section of a \" + tokenizedInput[0] + \" cannot be empty.\");"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "                    System.out.println(underscoredLine);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "                } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "                    System.out.println(underscoredLine);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "                    System.out.println(\"\\t\\u2639 !!ERROR!! \" + tokenizedInput[0] + \" command is missing additional parameters.\");"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "                    System.out.println(underscoredLine);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "            if (isExitCommandInvoked) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "                System.out.print(\"\u003e\u003e\u003e\");"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        sayGoodbye();"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brandoncjh": 204,
      "-": 3
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "    public Event(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + by + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brandoncjh": 14
    }
  },
  {
    "path": "src/main/java/IllegalKeywordException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "public class IllegalKeywordException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "  //no other code needed"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brandoncjh": 3
    }
  },
  {
    "path": "src/main/java/NoDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "public class NoDescriptionException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "  //no other code needed"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brandoncjh": 3
    }
  },
  {
    "path": "src/main/java/NoRemarkException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "public class NoRemarkException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "  //no other code needed"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brandoncjh": 3
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        return (this.isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "    public String getDescription(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "    public boolean getIsDone(){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "    public void markAsDone(){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brandoncjh": 29
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "    public Todo(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "brandoncjh": 14
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "\u003e\u003e\u003e\t____________________________________________________________"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        The list is empty."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        ____________________________________________________________"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "\u003e\u003e\u003e\t____________________________________________________________"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        Invalid task number."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "        ____________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "\u003e\u003e\u003e\t____________________________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "\tGot it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "\t[T][✘] abc"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "\tNow you have 1 tasks in the list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "\u003e\u003e\u003e\t____________________________________________________________"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "\tGot it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "\t[E][✘] def (at: 123)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "\tNow you have 2 tasks in the list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "\u003e\u003e\u003e\t____________________________________________________________"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "\tGot it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "\t[D][✘] ghi (by: 456)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "\tNow you have 3 tasks in the list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "\u003e\u003e\u003e\t____________________________________________________________"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "\tGot it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "\t[✘] jkl"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "\tNow you have 4 tasks in the list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "\u003e\u003e\u003e\t____________________________________________________________"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "\t1.[T][✘] abc"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "\t2.[E][✘] def (at: 123)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "\t3.[D][✘] ghi (by: 456)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "\t4.[✘] jkl"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "\u003e\u003e\u003e\t____________________________________________________________"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "\tGreat job! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "\t1.[✓] abc"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "\u003e\u003e\u003e\t____________________________________________________________"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "\tThis task has already been marked completed."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "\u003e\u003e\u003e\t____________________________________________________________"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "\t1.[T][✓] abc"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "\t2.[E][✘] def (at: 123)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "\t3.[D][✘] ghi (by: 456)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "\t4.[✘] jkl"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "\u003e\u003e\u003e\t____________________________________________________________"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "\tGreat job! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "\t2.[✓] def"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "\u003e\u003e\u003e\t____________________________________________________________"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "\tThis task has already been marked completed."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "\u003e\u003e\u003e\t____________________________________________________________"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "\t1.[T][✓] abc"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "\t2.[E][✓] def (at: 123)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "\t3.[D][✘] ghi (by: 456)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "\t4.[✘] jkl"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "\u003e\u003e\u003e~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "Bye! Hope to see you again soon"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "********************CONNECTION TERMINATED********************"
      }
    ],
    "authorContributionMap": {
      "brandoncjh": 71
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "todo abc"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "event def /123"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "deadline ghi /456"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "jkl"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "brandoncjh": 14
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java ..\\src\\main\\java\\Deadline.java ..\\src\\main\\java\\Event.java ..\\src\\main\\java\\Todo.java ..\\src\\main\\java\\Task.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "java -Dfile.encoding\u003dUTF8 -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "brandoncjh"
        },
        "content": "pause"
      }
    ],
    "authorContributionMap": {
      "brandoncjh": 23
    }
  }
]

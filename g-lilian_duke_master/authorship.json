[
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "### Add task"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "Add different types of tasks to a list."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "* Todo"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "* Event"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "* Deadline"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "### List tasks"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "List all the existing tasks, with their completion status."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "### Delete task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "Remove a task from the list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "### Mark task as complete"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "Sets a task\u0027s completion status to completed."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "### Find task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "Use a keyword to find tasks that include the keyword in their task description."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "### `todo [taskName]`"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "Adds a task of type \u0027Todo\u0027 to the task list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "`todo complete individual project`"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    ..................................................."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "\t Dook has added task: "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "\t  [T][✘] complete individual project"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "\t 1 task(s) in the list now!"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    ..................................................."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "### `event [taskName] /at [timeFrame]`"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "Adds a task of type \u0027Event\u0027 to the task list. Use /at to specify event date or time."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "`event party /at 1800-2200h`"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    ..................................................."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "\t Dook has added task: "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "\t  [E][✘] party  (at: 1800-2200h)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "\t 2 task(s) in the list now!"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    ..................................................."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "### `deadline [taskName] /by [deadline]`"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "Adds a task of type \u0027Deadline\u0027 to the task list. Use /by to specify the deadline."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "Input deadline in format YYYY-MM-DD for Dook to recognise and print the date in MMM DD YYYY style."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "`deadline homework /by 2020-02-26`"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    ..................................................."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "\t Dook has added task: "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "\t  [D][✘] homework  (by: Feb 26 2020)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "\t 3 task(s) in the list now!"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    ..................................................."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    "
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "### `list`"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "g-lilian"
        },
        "content": " Shows a numbered list of all existing tasks, with their descriptions and completion statuses."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    ..................................................."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "\t Dook will list your tasks now:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "\t 1. [T][✘] complete individual project"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "\t 2. [E][✘] party  (at: 1800-2200h)"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "\t 3. [D][✘] homework  (by: Feb 26 2020)"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    ..................................................."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    "
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "### `done [n]`"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "Sets the nth task in the current list to done."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "`done 1`"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    ..................................................."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "\t Dun dun dun dun! This task is done:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "\t   [T][✓] complete individual project"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    ..................................................."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    "
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "### `delete [n]`"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "Removes the nth existing task from the task list."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "`delete 1`"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    ..................................................."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "\t This task has been whisked out of existence:"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "\t  [T][✓] complete individual project"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "\t 2 task(s) remaining."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    ..................................................."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    "
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "### `find [keyword]`"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "Finds and shows tasks which contain the matching keyword."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "`find par`"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    ..................................................."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "\t Dook has found the following tasks: "
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "\t  1. [E][✘] party  (at: 1800-2200h)"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    ..................................................."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    "
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "### `bye`"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "Exits Dook. All existing tasks are saved in a .txt file and restored upon startup."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    ..................................................."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "\t Goodbye, see you in the seventh dimension!"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "                   *       +"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "             \u0027                  |"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "         ()    .-.,\u003d\"``\"\u003d.    - o -"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "               \u0027\u003d/_       \\     |"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            *   |  \u0027\u003d._    |"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "                 \\     `\u003d./`,        \u0027"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "              .   \u0027\u003d.__.\u003d\u0027 `\u003d\u0027      *"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     +                         +"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "          O      *        \u0027       ."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    ..................................................."
      }
    ],
    "authorContributionMap": {
      "g-lilian": 144,
      "-": 14
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "import duke.exceptions.InvalidCommandException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "import duke.exceptions.MissingDescriptionException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * Constructor for the Duke class."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * \u003cp\u003e \u003cbr\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * Creates a new Duke object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * A Storage object is created to handle loading and saving of the task list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     *\u003c/p\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * @param filePath Path to the data directory."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            tasks \u003d storage.loadTasks(); // Get tasks from txt file"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            UI.showLoadingError();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * Runs the entire application."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * @throws IOException If the task list fails to load."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    public void run() throws IOException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        UI.initUI();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        UI.printGreetMessage();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "                String userInput \u003d UI.readCommand();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "                Command c \u003d Parser.parse(userInput, tasks); // Prepare the Command object"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "                c.execute();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "                storage.saveTasks(tasks); // Update txt file"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "                isExit \u003d c.getExitStatus();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            } catch (InvalidCommandException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "                UI.showInvalidCommandError();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            } catch (MissingDescriptionException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "                UI.showMissingDescriptionError();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        UI.printEndMessage();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * Main method of the application."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * Creates a new Duke object and runs the application."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * @param args Command line arguments. Not used."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * @throws IOException If the task list fails to load."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        new Duke(\"/data\").run();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "g-lilian": 67,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "import duke.commands.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "g-lilian"
        },
        "content": " * Interprets the user input."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "g-lilian"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * Returns a Command object based on the command parsed from userInput."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * @param userInput Input obtained from the user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * @param tasks TaskList object containing all the tasks added to the list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * @return an object that is a child class of Command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    public static Command parse (String userInput, TaskList tasks) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        if (userInput.equals(\"bye\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            return new ExitCommand(\"\", tasks);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        String [] parsedInput \u003d userInput.split(\" \", 2);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        String command \u003d parsedInput[0];"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        String description \u003d \"\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        if (parsedInput.length \u003e 1) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            description \u003d parsedInput[1];"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            switch(command) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "                return new ListCommand(description, tasks);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            case \"done\": // Mark a task as done"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "                return new DoneCommand(description, tasks);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "                return new DeleteCommand(description, tasks);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "                return new FindCommand(description, tasks);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            default: // Add a task"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "                return new AddCommand(description, tasks, command);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            UI.br();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            System.out.println(\"\\t I\u0027m sorry, but I don\u0027t know what that means :(\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            UI.br();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        return new Command(description, tasks);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "g-lilian": 52
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "g-lilian"
        },
        "content": " * Handles loading and saving of tasks to a text file, so that data is preserved in future runs of the program."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "g-lilian"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    private String path;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    private static final String FILENAME \u003d \"/tasks.txt\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    public Storage (String path) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        this.path \u003d path;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * Returns a TaskList object containing tasks loaded from a .txt file."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * If the file is empty or does not exist, returns an empty TaskList."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * @return TaskList."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    public TaskList loadTasks() throws IOException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        String localDir \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        File f \u003d new File(localDir + path);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        if (!f.exists()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            f.mkdir();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        f \u003d new File(localDir + path + FILENAME);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        if (!f.exists()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            f.createNewFile();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            return new TaskList(); // Returns empty task list"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        Scanner scanner \u003d new Scanner(f);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        String currLine;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        String taskType;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        String isDone;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        String timeDescriptor;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        while (scanner.hasNext()) { // Read the file line by line"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            currLine \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            String[] parsedLine \u003d currLine.split(\",\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            taskType \u003d parsedLine[0];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            isDone \u003d parsedLine[1];"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            description \u003d parsedLine[2];"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            Task t \u003d new Task(description);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            switch (taskType) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "                t \u003d new Todo(description);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "                timeDescriptor \u003d parsedLine[3];"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "                t \u003d new Deadline(description, timeDescriptor);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "                timeDescriptor \u003d parsedLine[3];"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "                t \u003d new Event(description, timeDescriptor);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "                System.out.println(\"Invalid task type recorded.\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            tasks.addTask(t);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            if (isDone.equals(\"1\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "                t.setDone();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * Saves the tasks from the current TaskList to a .txt file."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * @param tasks Most updated TaskList."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    public void saveTasks(TaskList tasks) throws IOException {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        String localDir \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        FileWriter fw \u003d new FileWriter(localDir + path + FILENAME);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        for (Task task : tasks.getTaskList()) { // Write tasks line by line"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            fw.write(task.getFileRecord());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "g-lilian": 94
    }
  },
  {
    "path": "src/main/java/duke/commands/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "import duke.exceptions.InvalidCommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "import duke.exceptions.MissingDescriptionException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "g-lilian"
        },
        "content": " * Represents the command to add any type of task to the task list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "g-lilian"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    protected String command;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * Constructor for AddCommand class."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * \u003cp\u003e \u003cbr\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * Creates a new AddCommand with the task description, task list and command word."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     *\u003c/p\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * @param description Description of the task provided by the user."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * @param tasks Main task list containing all existing tasks."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * @param command Command word provided by the user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    public AddCommand (String description, TaskList tasks, String command) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        super(description, tasks);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * Identifies and adds the correct Task object to the task list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * @throws MissingDescriptionException If the task description is incomplete."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * @throws InvalidCommandException If the command word is invalid."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    public void execute() throws MissingDescriptionException, InvalidCommandException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        Task t;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        // Parse input to obtain text and timeDescriptor"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        String timeDescriptor \u003d \"\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        String text \u003d \"\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            int slashPos \u003d description.indexOf(\u0027/\u0027);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            if (slashPos !\u003d -1) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "                timeDescriptor \u003d description.substring(slashPos + 4);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "                text \u003d description.substring(0, slashPos);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            throw new MissingDescriptionException();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            t \u003d new Todo(description);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            if (description.equals(\"\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "                throw new MissingDescriptionException();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            t \u003d new Deadline(text, timeDescriptor);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            if (text.equals(\"\") || timeDescriptor.equals(\"\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "                throw new MissingDescriptionException();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            t \u003d new Event(text, timeDescriptor);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            if (text.equals(\"\") || timeDescriptor.equals(\"\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "                throw new MissingDescriptionException();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            throw new InvalidCommandException();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        tasks.addTask(t);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        UI.printAddedTaskMessage(t, tasks.getListSize());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "g-lilian": 76
    }
  },
  {
    "path": "src/main/java/duke/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "import duke.exceptions.InvalidCommandException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "import duke.exceptions.MissingDescriptionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "g-lilian"
        },
        "content": " * Represents the command entered by the user, inherited by child classes which represent the specific commands."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "g-lilian"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    protected TaskList tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    protected boolean isExit;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * Constructor for Command class."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * \u003cp\u003e \u003cbr\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * Creates a new Command with the task description and task list."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     *\u003c/p\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * @param description Description of the task provided by the user."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * @param tasks Main task list containing all existing tasks."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    public Command (String description, TaskList tasks) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    public void execute() throws MissingDescriptionException, InvalidCommandException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        // To be implemented by child classes"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    public boolean getExitStatus() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        return this.isExit;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "g-lilian": 35
    }
  },
  {
    "path": "src/main/java/duke/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "g-lilian"
        },
        "content": " * Represents the command to delete a task from the list."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "g-lilian"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    public DeleteCommand (String description, TaskList tasks) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        super(description, tasks);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * Removes the task from the task list based on the index given."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        tasks.deleteTask(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "g-lilian": 20
    }
  },
  {
    "path": "src/main/java/duke/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "g-lilian"
        },
        "content": " * Represents the command to mark a task as done."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "g-lilian"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    public DoneCommand (String description, TaskList tasks) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        super(description, tasks);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * Sets a task\u0027s completion status to true."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        tasks.markDone(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "g-lilian": 20
    }
  },
  {
    "path": "src/main/java/duke/commands/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "g-lilian"
        },
        "content": " * Represents the command to exit the program."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "g-lilian"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    public ExitCommand (String description, TaskList tasks) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        super(description, tasks);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * Sets the exit status of the program to true, so that it terminates on the next iteration."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        this.isExit \u003d true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "g-lilian": 20
    }
  },
  {
    "path": "src/main/java/duke/commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    public FindCommand (String description, TaskList tasks) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        super(description, tasks);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        tasks.findTasks(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "g-lilian": 14
    }
  },
  {
    "path": "src/main/java/duke/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "g-lilian"
        },
        "content": " * Represents the command to list all existing tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "g-lilian"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    public ListCommand (String description, TaskList tasks) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        super(description, tasks);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * Lists all tasks in the task list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        tasks.listTasks();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "g-lilian": 21
    }
  },
  {
    "path": "src/main/java/duke/exceptions/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "g-lilian"
        },
        "content": " * Thrown when input command is invalid."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "g-lilian"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "public class InvalidCommandException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "g-lilian": 8
    }
  },
  {
    "path": "src/main/java/duke/exceptions/MissingDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "g-lilian"
        },
        "content": " * Thrown when a task is missing parts of the input description."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "g-lilian"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "public class MissingDescriptionException extends Exception{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "g-lilian": 8
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "g-lilian"
        },
        "content": " * Represents a task of the type Deadline."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "g-lilian"
        },
        "content": " * A Deadline object contains the required date of completion in addition to information contained in its parent class, Task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "g-lilian"
        },
        "content": " * @see Task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "g-lilian"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * Constructor for Deadline Task class."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * \u003cp\u003e \u003cbr\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * Creates a new Deadline with the task description and deadline."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * Also sets the taskType to \"D\", representing Deadline."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     *\u003c/p\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * @param description Description of the task provided by the user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * @param by Deadline of the task provided by the user."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        this.taskType \u003d \"D\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    public String getFileRecord() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        int doneValue \u003d isDone ? 1 : 0;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        return String.format(\"%s,%d,%s,%s\\n\", taskType, doneValue, description.strip(), by);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * Returns task description for displaying of task details."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * Allows re-formatting of deadline description from yyyy-mm-dd to mm-d-yyyy."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * @return String of re-formatted task details."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        LocalDate date \u003d null;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            date \u003d LocalDate.parse(by); // Parse input of form yyyy-mm-dd"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        } catch (DateTimeParseException e){"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            return \"[D]\" + super.toString() + \" (by: \" + by + \")\"; // If not in correct date format, print original String"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        String parsedDate \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + parsedDate + \")\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "g-lilian": 53
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "g-lilian"
        },
        "content": " * Represents a task of the type Event."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "g-lilian"
        },
        "content": " * An Event object contains the time frame of the event in addition to information contained in its parent, Task."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "g-lilian"
        },
        "content": " * @see Task"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "g-lilian"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * Constructor for Event Task class."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * \u003cp\u003e \u003cbr\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * Creates a new Event with the task description and event period."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * Also sets the taskType to \"E\", representing Event."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     *\u003c/p\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * @param description Description of the task provided by the user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * @param at Event period specified by the user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        this.taskType \u003d \"E\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    public String getFileRecord() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        int doneValue \u003d isDone ? 1 : 0;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        return String.format(\"%s,%d,%s,%s\\n\", this.taskType, doneValue, this.description.strip(), this.at);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * Returns task description for displaying of task details."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * @return String of re-formatted task details."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "g-lilian": 41
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "g-lilian"
        },
        "content": " * Represents a task specified by the user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "g-lilian"
        },
        "content": " * This class is inherited by Event, Deadline and Todo."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "g-lilian"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    protected String taskType;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * Constructor for Task class."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * \u003cp\u003e \u003cbr\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * Creates a new Task with the task description."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * Initializes the completion status of the task to false, and the taskType to a placeholder \"Task\"."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     *\u003c/p\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * @param description Description of the task provided by the user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        this.taskType \u003d \"Task\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * Returns / if task has been marked as completed, or X otherwise."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * @return Tick symbol if completed, cross symbol otherwise."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        return (isDone ? \"/\" : \"X\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * Returns String in the format used for recording tasks in the .txt file."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * @return File record."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    public String getFileRecord() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        int doneValue \u003d isDone ? 1 : 0;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        return String.format(\"%s,%d,%s\\n\", this.taskType, doneValue, this.description.strip());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * Returns basic re-formatted task description for displaying of task details."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * This method is overridden in the child classes to display information about specific types of tasks."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * @return String of re-formatted task details."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "g-lilian": 62
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "g-lilian"
        },
        "content": " * Represents the main task list, with operations to list, add and delete tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "g-lilian"
        },
        "content": " * @see Task"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "g-lilian"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    public TaskList () {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e (100);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * Prints all tasks in the task list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    public void listTasks() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        UI.br();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        System.out.println(\"\\t Dook will list your tasks now:\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        for (int i\u003d0; i\u003ctasks.size(); i++) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            int taskNum \u003d i+1;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            System.out.println(\"\\t \" + taskNum + \". \" + tasks.get(i));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        UI.br();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    public int getListSize() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * Appends new task to the list."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * @param t Task to be appended."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    public void addTask(Task t) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        tasks.add(t);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * Finds tasks with matching descriptions and lists them."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * @param description Text to search for."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    public void findTasks(String description) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        UI.br();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        System.out.println(\"\\t Dook has found the following tasks: \");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        int i\u003d1;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        for (Task t : tasks) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            if (t.getDescription().contains(description)) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "                System.out.println(\"\\t  \" + i + \". \" + t);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        if (i\u003d\u003d1) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            System.out.println(\"\\t  No matching tasks :(\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        UI.br();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * Sets a task\u0027s completion status to true and prints done message."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * @param description String index of the task to be marked as done, based on its list position."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    public void markDone(String description) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        UI.br();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            int taskIdx \u003d Integer.parseInt(description) - 1; // -1 for zero-based indexing"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            tasks.get(taskIdx).setDone();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            System.out.println(\"\\t Dun dun dun dun! This task is done:\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            System.out.println(\"\\t   \" + tasks.get(taskIdx));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            System.out.println(\"\\t Dook does not recognise this task!\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        UI.br();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * Deletes a task from the task list."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * @param description String index of the task to be deleted, based on its list position."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    public void deleteTask(String description) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        UI.br();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            int taskIdx \u003d Integer.parseInt(description) - 1;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            Task t \u003d tasks.get(taskIdx);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            System.out.println(\"\\t This task has been whisked out of existence:\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            System.out.println(\"\\t  \" + t);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            tasks.remove(taskIdx);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            System.out.println(\"\\t \" + tasks.size() + \" task(s) remaining.\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "            System.out.println(\"\\t Dook does not recognise this task!\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        UI.br();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "g-lilian": 106
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "g-lilian"
        },
        "content": " * Represents a task of the type Todo."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "g-lilian"
        },
        "content": " * @see Task"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "g-lilian"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * Constructor for Todo Task class."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * \u003cp\u003e \u003cbr\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * Creates a new Todo with the task description."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * Also sets the taskType to \"T\", representing Todo."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     *\u003c/p\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * @param description Description of the task provided by the user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        this.taskType \u003d \"T\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * Returns task description for displaying of task details."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * @return String of re-formatted task details."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "g-lilian": 31
    }
  },
  {
    "path": "src/main/java/duke/ui/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "g-lilian"
        },
        "content": " * Handles user interactions."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "g-lilian"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    protected static Scanner input;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    public static void initUI() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * Returns the next line of user input."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * @return The String containing the next line of user input."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    public static String readCommand() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        return input.nextLine();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * Prints the line divider."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    public static void br () {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        System.out.println(\"    ...................................................\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    public static void printGreetMessage() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        br();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        String logo \u003d"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "                \"        ┌┬┐┌─┐┌─┐┬┌─\\n\" +"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "                        \"         │││ ││ │├┴┐\\n\" +"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "                        \"        ─┴┘└─┘└─┘┴ ┴\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        System.out.println(\"\\t Hello! I am \\n\" + logo);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        System.out.println(\"\\t Does the human have a request today?\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        br();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    public static void printEndMessage() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        br();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        System.out.println(\"\\t Goodbye, see you in the seventh dimension!\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        System.out.println(\"                   *       +\\n\" +"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "                \"             \u0027                  |\\n\" +"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "                \"         ()    .-.,\u003d\\\"``\\\"\u003d.    - o -\\n\" +"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "                \"               \u0027\u003d/_       \\\\     |\\n\" +"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "                \"            *   |  \u0027\u003d._    |\\n\" +"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "                \"                 \\\\     `\u003d./`,        \u0027\\n\" +"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "                \"              .   \u0027\u003d.__.\u003d\u0027 `\u003d\u0027      *\\n\" +"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "                \"     +                         +\\n\" +"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "                \"          O      *        \u0027       .\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        br();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * Prints the message shown after a task is added to the task list."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * @param t Task that needs to have its details printed."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * @param listSize Total number of tasks in the task list."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    public static void printAddedTaskMessage(Task t, int listSize) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        UI.br();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        System.out.println(\"\\t Dook has added task: \");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        System.out.println(\"\\t  \" + t);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        System.out.println(\"\\t \" + listSize + \" task(s) in the list now!\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        UI.br();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * Prints the message shown when there is an IO exception."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    public static void showLoadingError() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        br();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        System.out.println(\"\\t Task list not found! Creating new one...\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        br();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * Prints the message shown when an invalid command is entered."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    public static void showInvalidCommandError() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        UI.br();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        System.out.println(\"\\t Dook does not recognise this command! :(\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        UI.br();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "g-lilian"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     * Prints the message shown when part(s) of the description of a task is missing."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    public static void showMissingDescriptionError() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        UI.br();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        System.out.println(\"\\t Please enter the full task description!\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "        UI.br();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "g-lilian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "g-lilian": 98
    }
  }
]
